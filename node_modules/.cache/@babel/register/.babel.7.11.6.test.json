{
  "{\"sourceRoot\":\"/workspace/boilerplate-project-sudoku-solver/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/workspace/boilerplate-project-sudoku-solver\",\"filename\":\"/workspace/boilerplate-project-sudoku-solver/routes/api.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/workspace/boilerplate-project-sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/workspace/boilerplate-project-sudoku-solver",
      "filename": "/workspace/boilerplate-project-sudoku-solver/routes/api.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/workspace/boilerplate-project-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/workspace/boilerplate-project-sudoku-solver/routes/api.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/workspace/boilerplate-project-sudoku-solver/routes/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/routes/",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nconst SudokuSolver = require('../controllers/sudoku-solver.js');\nmodule.exports = function (app) {\n  let solver = new SudokuSolver();\n  app.route('/api/check').post((req, res) => {\n    const puzzle = req.body.puzzle;\n    const coordinate = req.body.coordinate;\n    const value = req.body.value;\n    if (puzzle == \"\" || puzzle == null || coordinate == \"\" || coordinate == null || value == \"\" || value == null) {\n      return res.json({\n        error: 'Required field(s) missing'\n      });\n    }\n    let validation = solver.validate(puzzle);\n    if (validation === \"Invalid characters in puzzle\") {\n      return res.json({\n        error: 'Invalid characters in puzzle'\n      });\n    } else if (validation === \"Expected puzzle to be 81 characters long\") {\n      return res.json({\n        error: 'Expected puzzle to be 81 characters long'\n      });\n    }\n\n    // check that coord is A1 - I9 \n    const validCoords = /^[A-I][1-9]$/;\n    if (!validCoords.test(coordinate)) {\n      return res.json({\n        error: 'Invalid coordinate'\n      });\n    }\n\n    // check that value = 1-9 \n    const validVal = /^[1-9]$/;\n    if (!validVal.test(value)) {\n      return res.json({\n        error: 'Invalid value'\n      });\n    }\n\n    // validation done\n    const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"];\n    const row = letters.indexOf(coordinate.split(\"\")[0]) + 1;\n    const col = coordinate.split(\"\")[1];\n\n    // Check if the value is already in the coordinate\n    const index = (row - 1) * 9 + (parseInt(col) - 1);\n    if (puzzle[index] === value) {\n      return res.json({\n        valid: true\n      });\n    }\n    let checkRow = solver.checkRowPlacement(puzzle, row, col, value);\n    let checkCol = solver.checkColPlacement(puzzle, row, col, value);\n    let checkRegion = solver.checkRegionPlacement(puzzle, row, col, value);\n    if (checkRow && checkCol && checkRegion) {\n      return res.json({\n        valid: true\n      });\n    } else if (!checkRow && !checkCol && !checkRegion) {\n      return res.json({\n        valid: false,\n        conflict: [\"row\", \"column\", \"region\"]\n      });\n    } else if (!checkRow && !checkCol && checkRegion) {\n      return res.json({\n        valid: false,\n        conflict: [\"row\", \"column\"]\n      });\n    } else if (!checkRow && checkCol && !checkRegion) {\n      return res.json({\n        valid: false,\n        conflict: [\"row\", \"region\"]\n      });\n    } else if (checkRow && !checkCol && !checkRegion) {\n      return res.json({\n        valid: false,\n        conflict: [\"column\", \"region\"]\n      });\n    } else if (!checkRow && checkCol && checkRegion) {\n      return res.json({\n        valid: false,\n        conflict: [\"row\"]\n      });\n    } else if (checkRow && !checkCol && checkRegion) {\n      return res.json({\n        valid: false,\n        conflict: [\"column\"]\n      });\n    } else if (checkRow && checkCol && !checkRegion) {\n      return res.json({\n        valid: false,\n        conflict: [\"region\"]\n      });\n    }\n  });\n  app.route('/api/solve').post((req, res) => {\n    const puzzle = req.body.puzzle;\n    let validation = solver.validate(puzzle);\n    if (validation === \"Required field missing\") {\n      return res.json({\n        error: 'Required field missing'\n      });\n    } else if (validation === \"Invalid characters in puzzle\") {\n      return res.json({\n        error: 'Invalid characters in puzzle'\n      });\n    } else if (validation === \"Expected puzzle to be 81 characters long\") {\n      return res.json({\n        error: 'Expected puzzle to be 81 characters long'\n      });\n    }\n    let solution = solver.solve(puzzle);\n    if (solver.getNextEmptyCell(solution) == -1) {\n      return res.json({\n        solution: solution\n      });\n    } else {\n      return res.json({\n        error: 'Puzzle cannot be solved'\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "names": [
        "SudokuSolver",
        "require",
        "module",
        "exports",
        "app",
        "solver",
        "route",
        "post",
        "req",
        "res",
        "puzzle",
        "body",
        "coordinate",
        "value",
        "json",
        "error",
        "validation",
        "validate",
        "validCoords",
        "test",
        "validVal",
        "letters",
        "row",
        "indexOf",
        "split",
        "col",
        "index",
        "parseInt",
        "valid",
        "checkRow",
        "checkRowPlacement",
        "checkCol",
        "checkColPlacement",
        "checkRegion",
        "checkRegionPlacement",
        "conflict",
        "solution",
        "solve",
        "getNextEmptyCell"
      ],
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/routes/",
      "sources": [
        "api.js"
      ],
      "sourcesContent": [
        "'use strict';\n\nconst SudokuSolver = require('../controllers/sudoku-solver.js');\n\nmodule.exports = function (app) {\n  \n  let solver = new SudokuSolver();\n\n  app.route('/api/check')\n    .post((req, res) => {\n      const puzzle = req.body.puzzle;\n      const coordinate = req.body.coordinate;\n      const value = req.body.value;\n\n      if (puzzle == \"\"  || puzzle == null || coordinate == \"\"  || coordinate == null || value == \"\"  || value == null) {\n        return res.json({ error: 'Required field(s) missing' })\n      }\n\n      let validation = solver.validate(puzzle);\n\n      if (validation === \"Invalid characters in puzzle\") {\n        return res.json({ error: 'Invalid characters in puzzle' })\n      } else if (validation === \"Expected puzzle to be 81 characters long\") {\n        return res.json({ error: 'Expected puzzle to be 81 characters long' })\n      }\n\n      // check that coord is A1 - I9 \n      const validCoords = /^[A-I][1-9]$/;\n\n      if (!validCoords.test(coordinate)){\n        return res.json({ error: 'Invalid coordinate'})\n      }\n\n      // check that value = 1-9 \n      const validVal = /^[1-9]$/\n\n      if (!validVal.test(value)){\n        return res.json({ error: 'Invalid value' })\n      }\n\n      // validation done\n      const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"]\n      const row = letters.indexOf(coordinate.split(\"\")[0]) + 1\n      const col = coordinate.split(\"\")[1]\n      \n      // Check if the value is already in the coordinate\n      const index = (row - 1) * 9 + (parseInt(col) - 1);\n      if (puzzle[index] === value) {\n        return res.json({ valid: true });\n      }\n\n      let checkRow = solver.checkRowPlacement(puzzle, row, col, value);\n      let checkCol = solver.checkColPlacement(puzzle, row, col, value);\n      let checkRegion = solver.checkRegionPlacement(puzzle, row, col, value);\n\n      if (checkRow && checkCol && checkRegion) {\n          return res.json({ valid: true })\n      } else if (!checkRow && !checkCol && !checkRegion) {\n        return res.json( {valid: false, conflict: [\"row\", \"column\", \"region\"] })\n      } else if (!checkRow && !checkCol && checkRegion) {\n        return res.json( {valid: false, conflict: [\"row\", \"column\"] })\n      } else if (!checkRow && checkCol && !checkRegion) {\n        return res.json( {valid: false, conflict: [\"row\", \"region\"] })\n      } else if (checkRow && !checkCol && !checkRegion) {\n        return res.json( {valid: false, conflict: [\"column\", \"region\"] })\n      } else if (!checkRow && checkCol && checkRegion) {\n        return res.json( {valid: false, conflict: [\"row\"] })\n      } else if (checkRow && !checkCol && checkRegion) {\n        return res.json( {valid: false, conflict: [\"column\"] })\n      } else if (checkRow && checkCol && !checkRegion) {\n        return res.json( {valid: false, conflict: [\"region\"] })\n      }\n    });\n    \n  app.route('/api/solve')\n    .post((req, res) => {\n      const puzzle = req.body.puzzle;\n      let validation = solver.validate(puzzle);\n\n      if (validation === \"Required field missing\") {\n        return res.json({ error: 'Required field missing' })\n      } else if (validation === \"Invalid characters in puzzle\") {\n        return res.json({ error: 'Invalid characters in puzzle' })\n      } else if (validation === \"Expected puzzle to be 81 characters long\") {\n        return res.json({ error: 'Expected puzzle to be 81 characters long' })\n      }\n\n      let solution = solver.solve(puzzle)\n\n      if (solver.getNextEmptyCell(solution) == -1) {\n          return res.json({solution: solution})\n      } else {\n        return res.json({ error: 'Puzzle cannot be solved' })\n      }\n    });\n};"
      ],
      "mappings": "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",
      "ignoreList": []
    },
    "sourceType": "module",
    "mtime": 1745760540933
  },
  "{\"sourceRoot\":\"/workspace/boilerplate-project-sudoku-solver/controllers/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/workspace/boilerplate-project-sudoku-solver\",\"filename\":\"/workspace/boilerplate-project-sudoku-solver/controllers/sudoku-solver.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/workspace/boilerplate-project-sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/controllers/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/workspace/boilerplate-project-sudoku-solver",
      "filename": "/workspace/boilerplate-project-sudoku-solver/controllers/sudoku-solver.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/workspace/boilerplate-project-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/workspace/boilerplate-project-sudoku-solver/controllers/sudoku-solver.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/workspace/boilerplate-project-sudoku-solver/controllers/sudoku-solver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/controllers/",
        "sourceFileName": "sudoku-solver.js"
      }
    },
    "ast": null,
    "code": "class SudokuSolver {\n  validate(puzzleString) {\n    //\n    const puzzle = puzzleString;\n    if (puzzle == \"\" || puzzle == null) {\n      return 'Required field missing';\n    }\n\n    // regex to check for valid chars'\n    const validChars = /^[1-9.]+$/;\n    if (!validChars.test(puzzle)) {\n      return 'Invalid characters in puzzle';\n    }\n\n    // check len\n    if (puzzle.length != 81) {\n      return 'Expected puzzle to be 81 characters long';\n    }\n  }\n  checkRowPlacement(puzzleString, row, column, value) {\n    row = row - 1;\n    column = column - 1;\n    value = value.toString();\n    let puzzleArray = puzzleString.split(\"\");\n    let rowStart = row * 9;\n    let rowEnd = rowStart + 9;\n    let rowArray = puzzleArray.slice(rowStart, rowEnd);\n\n    //console.log(rowArray)\n\n    if (!rowArray.includes(value)) {\n      //console.log(`checkRowPlacement = true`)\n      return true;\n    }\n\n    //console.log(`checkRowPlacement = false`)\n    return false;\n  }\n  checkColPlacement(puzzleString, row, column, value) {\n    row = row - 1;\n    column = column - 1;\n    value = value.toString();\n    let colArray = [];\n    let puzzleArray = puzzleString.split(\"\");\n    for (let i = column; i < puzzleString.length; i += 9) {\n      colArray.push(puzzleArray[i]);\n    }\n\n    //console.log(colArray)\n\n    if (!colArray.includes(value)) {\n      //console.log(`checkColPlacement = true`)\n      return true;\n    }\n\n    //console.log(`checkColPlacement = false`)\n    return false;\n  }\n  checkRegionPlacement(puzzleString, row, column, value) {\n    // row = row - 1;\n    // column = column - 1;\n    value = value.toString();\n    let puzzleArray = puzzleString.split(\"\");\n    let regionArr = [];\n    const valPos = (row - 1) * 9 + column - 1;\n\n    //const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"]\n\n    // get the positioning in the 3x3 regionCol\n\n    // RC RC RC\n    // 00 01 02\n    // 10 11 12\n    // 20 21 22\n\n    let regionRow = row % 3 == 2 ? 1 : row % 3 == 1 ? 0 : 2;\n    let regionCol = column % 3 == 2 ? 1 : column % 3 == 1 ? 0 : 2;\n    let position = regionRow.toString() + regionCol.toString();\n\n    //console.log(`Value position: ${valPos}, R${regionRow}, C${regionCol}, Region: ${position}`)\n\n    switch (position) {\n      // handling of first row\n      case \"00\":\n        for (let i = 0; i < 19; i += 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos + i, valPos + i + 3));\n        }\n        //console.log(regionArr)\n        break;\n      case \"01\":\n        for (let i = 0; i < 19; i += 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - 1 + i, valPos - 1 + i + 3));\n        }\n        //console.log(regionArr)\n        break;\n      case \"02\":\n        for (let i = 0; i < 19; i += 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - 2 + i, valPos - 2 + i + 3));\n        }\n        //console.log(regionArr)\n        break;\n\n      // handling of second row\n\n      case \"10\":\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 9, valPos - 6));\n        regionArr = regionArr.concat(puzzleArray.slice(valPos, valPos + 3));\n        regionArr = regionArr.concat(puzzleArray.slice(valPos + 9, valPos + 12));\n        //console.log(regionArr)\n        break;\n      case \"11\":\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 10, valPos - 7));\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 1, valPos + 2));\n        regionArr = regionArr.concat(puzzleArray.slice(valPos + 8, valPos + 11));\n        //console.log(regionArr)\n        break;\n      case \"12\":\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 11, valPos - 8));\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 2, valPos + 1));\n        regionArr = regionArr.concat(puzzleArray.slice(valPos + 7, valPos + 10));\n        //console.log(regionArr)\n        break;\n\n      // handling of third row\n      case \"20\":\n        for (let i = 18; i >= 0; i -= 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - i, valPos - i + 3));\n        }\n        //console.log(regionArr)\n        break;\n      case \"21\":\n        for (let i = 18; i >= 0; i -= 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - 1 - i, valPos - 1 - i + 3));\n        }\n        //console.log(regionArr)\n        break;\n      case \"22\":\n        for (let i = 18; i >= 0; i -= 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - 2 - i, valPos - 2 - i + 3));\n        }\n        //console.log(regionArr)\n        break;\n      default:\n        console.log(\"error\");\n        break;\n    }\n\n    //console.log(regionArr)\n\n    if (!regionArr.includes(value)) {\n      //console.log(`checkRegionPlacement = true`)\n      return true;\n    }\n\n    //console.log(`checkRegionPlacement = false`)\n    return false;\n  }\n  comboPlacementCheck(puzzle, row, col, value) {\n    if (this.checkRowPlacement(puzzle, row, col, value) && this.checkColPlacement(puzzle, row, col, value) && this.checkRegionPlacement(puzzle, row, col, value)) {\n      return true;\n    }\n    return false;\n  }\n  getNextEmptyCell(puzzleString) {\n    return puzzleString.indexOf(\".\");\n  }\n  solve(puzzleString) {\n    //console.log(`${puzzleString} ###START###`)\n\n    let nextBlankPosition = this.getNextEmptyCell(puzzleString);\n    //console.log(`NextBlank = ${nextBlankPosition}`)\n    let blankRow = nextBlankPosition === -1 ? -1 : Math.floor(nextBlankPosition / 9) + 1;\n    let blankCol = nextBlankPosition === -1 ? -1 : nextBlankPosition % 9 + 1;\n    if (blankCol === -1) {\n      //console.log(`#############Base ${puzzleString}`)\n      return puzzleString;\n    }\n    let puzzleArray;\n    for (let y = 1; y <= 9; y++) {\n      //console.log(`row${blankRow} col${blankCol}, num${y}, rCheck = ${this.checkRowPlacement(puzzleString, blankRow, blankCol, y)} cCheck = ${this.checkColPlacement(puzzleString, blankRow, blankCol, y)}  gCheck = ${this.checkRegionPlacement(puzzleString, blankRow, blankCol, y)} `)\n      if (this.comboPlacementCheck(puzzleString, blankRow, blankCol, y)) {\n        puzzleArray = puzzleString.split(\"\");\n        puzzleArray[nextBlankPosition] = y.toString();\n        puzzleString = puzzleArray.join(\"\");\n        //this.solve(puzzleString);\n        puzzleString = this.solve(puzzleString);\n        //console.log(`${puzzleString} returned string`)\n      }\n    }\n\n    //console.log(`${puzzleString} before \".\" if. \"To replace position \" = ${nextBlankPosition}, next empty position = ${this.getNextEmptyCell(puzzleString)}`) //problem?\n\n    if (this.getNextEmptyCell(puzzleString) !== -1) {\n      //console.log(`${puzzleString} inside \".\" if. To replace position = ${nextBlankPosition}`)\n      puzzleArray = puzzleString.split(\"\");\n      puzzleArray[nextBlankPosition] = \".\";\n      puzzleString = puzzleArray.join(\"\");\n    }\n\n    //console.log(`${puzzleString} before last return on \"To replace position \" = ${nextBlankPosition}, next empty position = ${this.getNextEmptyCell(puzzleString)}`) //problem?\n    return puzzleString;\n  }\n}\nmodule.exports = SudokuSolver;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "names": [
        "SudokuSolver",
        "validate",
        "puzzleString",
        "puzzle",
        "validChars",
        "test",
        "length",
        "checkRowPlacement",
        "row",
        "column",
        "value",
        "toString",
        "puzzleArray",
        "split",
        "rowStart",
        "rowEnd",
        "rowArray",
        "slice",
        "includes",
        "checkColPlacement",
        "colArray",
        "i",
        "push",
        "checkRegionPlacement",
        "regionArr",
        "valPos",
        "regionRow",
        "regionCol",
        "position",
        "concat",
        "console",
        "log",
        "comboPlacementCheck",
        "col",
        "getNextEmptyCell",
        "indexOf",
        "solve",
        "nextBlankPosition",
        "blankRow",
        "Math",
        "floor",
        "blankCol",
        "y",
        "join",
        "module",
        "exports"
      ],
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/controllers/",
      "sources": [
        "sudoku-solver.js"
      ],
      "sourcesContent": [
        "class SudokuSolver {\n\n  validate(puzzleString) {\n    //\n    const puzzle = puzzleString;\n\n    if (puzzle == \"\"  || puzzle == null) {\n      return 'Required field missing';\n    }\n\n    // regex to check for valid chars'\n    const validChars = /^[1-9.]+$/;\n\n    if (!validChars.test(puzzle)){\n      return 'Invalid characters in puzzle';\n    }\n\n    // check len\n    if (puzzle.length != 81 ){\n      return 'Expected puzzle to be 81 characters long';\n    }\n\n  }\n\n  checkRowPlacement(puzzleString, row, column, value) {\n    \n    row = row - 1;\n    column = column - 1;\n    value = value.toString()\n\n    let puzzleArray = puzzleString.split(\"\");\n    let rowStart = row * 9\n    let rowEnd = rowStart + 9\n    let rowArray = puzzleArray.slice(rowStart, rowEnd)\n    \n    //console.log(rowArray)\n\n    if (!rowArray.includes(value)) {\n        //console.log(`checkRowPlacement = true`)\n        return true\n    }\n\n    //console.log(`checkRowPlacement = false`)\n    return false\n  }\n\n  checkColPlacement(puzzleString, row, column, value) {\n\n    row = row - 1;\n    column = column - 1;\n    value = value.toString()\n    let colArray = []\n\n    let puzzleArray = puzzleString.split(\"\");\n\n    for (let i = column; i < puzzleString.length; i+=9) {\n      colArray.push(puzzleArray[i])\n    }\n    \n    //console.log(colArray)\n\n    if (!colArray.includes(value)) {\n        //console.log(`checkColPlacement = true`)\n        return true\n    }\n        \n    //console.log(`checkColPlacement = false`)\n    return false\n\n  }\n\n  checkRegionPlacement(puzzleString, row, column, value) {\n    // row = row - 1;\n    // column = column - 1;\n    value = value.toString()\n    let puzzleArray = puzzleString.split(\"\");\n    let regionArr = []\n    const valPos = (row - 1) * 9 + column - 1\n\n    //const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"]\n\n\n    // get the positioning in the 3x3 regionCol\n    \n    // RC RC RC\n    // 00 01 02\n    // 10 11 12\n    // 20 21 22\n\n    let regionRow = row % 3 == 2 ? 1 : row % 3 == 1 ? 0 : 2;\n    let regionCol = column % 3 == 2 ? 1 : column % 3 == 1 ? 0 : 2;\n    let position = regionRow.toString() + regionCol.toString()\n\n    //console.log(`Value position: ${valPos}, R${regionRow}, C${regionCol}, Region: ${position}`)\n\n    switch (position){\n\n      // handling of first row\n      case \"00\":\n        for (let i = 0; i < 19; i += 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos + i, valPos + i + 3))\n        }\n        //console.log(regionArr)\n        break;\n\n      case \"01\":\n        for (let i = 0; i < 19; i += 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - 1 + i, valPos - 1 + i + 3))\n        }\n        //console.log(regionArr)\n        break;\n\n      case \"02\":\n        for (let i = 0; i < 19; i += 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - 2 + i, valPos - 2 + i + 3))\n        }\n        //console.log(regionArr)\n        break;\n\n\n      // handling of second row\n\n      case \"10\":\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 9, valPos - 6))\n        regionArr = regionArr.concat(puzzleArray.slice(valPos, valPos + 3)) \n        regionArr = regionArr.concat(puzzleArray.slice(valPos + 9, valPos + 12)) \n        //console.log(regionArr)\n        break;\n\n      case \"11\":\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 10, valPos - 7))\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 1, valPos + 2)) \n        regionArr = regionArr.concat(puzzleArray.slice(valPos + 8, valPos + 11)) \n        //console.log(regionArr)\n        break;\n\n      case \"12\":\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 11, valPos - 8))\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 2, valPos + 1)) \n        regionArr = regionArr.concat(puzzleArray.slice(valPos + 7, valPos + 10)) \n        //console.log(regionArr)\n        break;\n\n      // handling of third row\n      case \"20\":\n        for (let i = 18; i >= 0; i -= 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - i, valPos - i + 3))\n        }\n        //console.log(regionArr)\n        break;\n\n      case \"21\":\n        for (let i = 18; i >= 0; i -= 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - 1 - i, valPos - 1 - i + 3))\n        }\n        //console.log(regionArr)\n        break;\n\n      case \"22\":\n        for (let i = 18; i >= 0; i -= 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - 2 - i, valPos - 2 - i + 3))\n        }\n        //console.log(regionArr)\n        break;\n\n      default:\n      console.log(\"error\")\n      break;\n    }\n\n  //console.log(regionArr)\n\n    if (!regionArr.includes(value)) {\n        //console.log(`checkRegionPlacement = true`)\n        return true\n    }\n  \n  //console.log(`checkRegionPlacement = false`)\n  return false;\n\n  }\n\n  comboPlacementCheck(puzzle, row, col, value){\n\n    if (this.checkRowPlacement(puzzle, row, col, value) && this.checkColPlacement(puzzle, row, col, value) && this.checkRegionPlacement(puzzle, row, col, value)) {\n      return true\n    }\n\n    return false\n  }\n\n  getNextEmptyCell(puzzleString) {\n    return puzzleString.indexOf(\".\")\n  }\n\n\n  solve(puzzleString) {\n    //console.log(`${puzzleString} ###START###`)\n\n    let nextBlankPosition = this.getNextEmptyCell(puzzleString);\n    //console.log(`NextBlank = ${nextBlankPosition}`)\n    let blankRow = nextBlankPosition === -1 ? -1 : Math.floor(nextBlankPosition / 9) + 1;\n    let blankCol = nextBlankPosition === -1 ? -1 : (nextBlankPosition % 9) + 1;\n\n    if (blankCol === -1){\n      //console.log(`#############Base ${puzzleString}`)\n      return puzzleString;\n    }\n\n    let puzzleArray;\n\n    for (let y = 1; y <= 9; y++){\n      //console.log(`row${blankRow} col${blankCol}, num${y}, rCheck = ${this.checkRowPlacement(puzzleString, blankRow, blankCol, y)} cCheck = ${this.checkColPlacement(puzzleString, blankRow, blankCol, y)}  gCheck = ${this.checkRegionPlacement(puzzleString, blankRow, blankCol, y)} `)\n      if (this.comboPlacementCheck(puzzleString, blankRow, blankCol, y)) {\n        puzzleArray = puzzleString.split(\"\");\n        puzzleArray[nextBlankPosition] = y.toString();\n        puzzleString = puzzleArray.join(\"\");\n        //this.solve(puzzleString);\n        puzzleString = this.solve(puzzleString)\n        //console.log(`${puzzleString} returned string`)\n      }\n\n    }\n\n    //console.log(`${puzzleString} before \".\" if. \"To replace position \" = ${nextBlankPosition}, next empty position = ${this.getNextEmptyCell(puzzleString)}`) //problem?\n\n    if (this.getNextEmptyCell(puzzleString) !== -1){\n      //console.log(`${puzzleString} inside \".\" if. To replace position = ${nextBlankPosition}`)\n      puzzleArray = puzzleString.split(\"\");\n      puzzleArray[nextBlankPosition] = \".\";\n      puzzleString = puzzleArray.join(\"\");\n    }\n\n    //console.log(`${puzzleString} before last return on \"To replace position \" = ${nextBlankPosition}, next empty position = ${this.getNextEmptyCell(puzzleString)}`) //problem?\n    return puzzleString\n  }\n}\n\nmodule.exports = SudokuSolver;\n\n"
      ],
      "mappings": "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",
      "ignoreList": []
    },
    "sourceType": "module",
    "mtime": 1745757707178
  }
}
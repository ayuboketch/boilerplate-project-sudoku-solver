{
  "{\"sourceRoot\":\"/workspace/boilerplate-project-sudoku-solver/tests/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/workspace/boilerplate-project-sudoku-solver\",\"filename\":\"/workspace/boilerplate-project-sudoku-solver/tests/1_unit-tests.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/workspace/boilerplate-project-sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/tests/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/workspace/boilerplate-project-sudoku-solver",
      "filename": "/workspace/boilerplate-project-sudoku-solver/tests/1_unit-tests.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/workspace/boilerplate-project-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/workspace/boilerplate-project-sudoku-solver/tests/1_unit-tests.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/workspace/boilerplate-project-sudoku-solver/tests/1_unit-tests.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/tests/",
        "sourceFileName": "1_unit-tests.js"
      }
    },
    "ast": null,
    "code": "const chai = require('chai');\n\nconst assert = chai.assert;\n\nconst Solver = require('../controllers/sudoku-solver.js');\n\nlet solver = new Solver();\nlet puzzle = '..9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..';\nlet solution = \"769235418851496372432178956174569283395842761628713549283657194516924837947381625\";\nsuite('UnitTests', () => {\n  test('Logic handles a valid puzzle string of 81 characters', function (done) {\n    let input = puzzle;\n    assert.equal(solver.solve(input), solution);\n    done();\n  });\n  test('Logic handles a puzzle string with invalid characters (not 1-9 or .)', function (done) {\n    let input = 'XX9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..';\n    assert.equal(solver.validate(input), \"Invalid characters in puzzle\");\n    done();\n  });\n  test('Logic handles a puzzle string that is not 81 characters in length', function (done) {\n    let input = '..9..5.1.85.4....2432......1...69.';\n    assert.equal(solver.validate(input), \"Expected puzzle to be 81 characters long\");\n    done();\n  });\n  test('Logic handles a valid row placement', function (done) {\n    let input = '..9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..';\n    assert.equal(solver.checkRowPlacement(input, 1, 1, 2), true);\n    done();\n  });\n  test('Logic handles an invalid row placement', function (done) {\n    let input = '..9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..';\n    assert.equal(solver.checkRowPlacement(input, 1, 1, 9), false);\n    done();\n  });\n  test('Logic handles a valid column placement', function (done) {\n    let input = '..9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..';\n    assert.equal(solver.checkColPlacement(input, 1, 1, 2), true);\n    done();\n  });\n  test('Logic handles an invalid column placement', function (done) {\n    let input = '..9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..';\n    assert.equal(solver.checkColPlacement(input, 1, 1, 1), false);\n    done();\n  });\n  test('Logic handles a valid region (3x3 grid) placement', function (done) {\n    let input = '..9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..';\n    assert.equal(solver.checkRegionPlacement(input, 1, 1, 7), true);\n    done();\n  });\n  test('Logic handles an invalid region (3x3 grid) placement', function (done) {\n    let input = '..9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..';\n    assert.equal(solver.checkRegionPlacement(input, 1, 1, 2), false);\n    done();\n  });\n  test('Valid puzzle strings pass the solver', function (done) {\n    let input = puzzle;\n    assert.equal(solver.solve(input), solution);\n    done();\n  }); //todo\n\n  test('Invalid puzzle strings fail the solver', function (done) {\n    let input = \"9.9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..\";\n    assert.notEqual(solver.getNextEmptyCell(solver.solve(input), -1));\n    done();\n  });\n  test('Solver returns the the expected solution for an incomplete puzzzle', function (done) {\n    let input = puzzle;\n    assert.equal(solver.solve(input), solution);\n    done();\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "1_unit-tests.js"
      ],
      "names": [
        "chai",
        "require",
        "assert",
        "Solver",
        "solver",
        "puzzle",
        "solution",
        "suite",
        "test",
        "done",
        "input",
        "equal",
        "solve",
        "validate",
        "checkRowPlacement",
        "checkColPlacement",
        "checkRegionPlacement",
        "notEqual",
        "getNextEmptyCell"
      ],
      "mappings": "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",
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/tests/",
      "sourcesContent": [
        "const chai = require('chai');\nconst assert = chai.assert;\n\nconst Solver = require('../controllers/sudoku-solver.js');\nlet solver = new Solver();\nlet puzzle = '..9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..'\nlet solution = \"769235418851496372432178956174569283395842761628713549283657194516924837947381625\"\n\nsuite('UnitTests', () => {\n\n  test('Logic handles a valid puzzle string of 81 characters', function(done) {\n    let input = puzzle;\n    assert.equal(solver.solve(input), solution);\n    done();\n  });\n\n  test('Logic handles a puzzle string with invalid characters (not 1-9 or .)', function(done) {\n    let input = 'XX9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..';\n    assert.equal(solver.validate(input), \"Invalid characters in puzzle\");\n    done();\n  });\n\n  test('Logic handles a puzzle string that is not 81 characters in length', function(done) {\n    let input = '..9..5.1.85.4....2432......1...69.';\n    assert.equal(solver.validate(input), \"Expected puzzle to be 81 characters long\");\n    done();\n  });\n\n  test('Logic handles a valid row placement', function(done) {\n    let input = '..9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..';\n    assert.equal(solver.checkRowPlacement(input, 1, 1, 2), true);\n    done();\n  });\n\n  test('Logic handles an invalid row placement', function(done) {\n    let input = '..9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..';\n    assert.equal(solver.checkRowPlacement(input, 1, 1, 9), false);\n    done();\n  });\n\n  test('Logic handles a valid column placement', function(done) {\n    let input = '..9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..';\n    assert.equal(solver.checkColPlacement(input, 1, 1, 2), true);\n    done();\n  });\n\n  test('Logic handles an invalid column placement', function(done) {\n    let input = '..9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..';\n    assert.equal(solver.checkColPlacement(input, 1, 1, 1), false);\n    done();\n  });\n\n  test('Logic handles a valid region (3x3 grid) placement', function(done) {\n    let input = '..9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..';\n    assert.equal(solver.checkRegionPlacement(input, 1, 1, 7), true);\n    done();\n  });\n\n  test('Logic handles an invalid region (3x3 grid) placement', function(done) {\n    let input = '..9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..';\n    assert.equal(solver.checkRegionPlacement(input, 1, 1, 2), false);\n    done();\n  });\n\n  test('Valid puzzle strings pass the solver', function(done) {\n    let input = puzzle;\n    assert.equal(solver.solve(input), solution);\n    done();\n  });\n\n  //todo\n  test('Invalid puzzle strings fail the solver', function(done) {\n    let input = \"9.9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..\";\n    assert.notEqual(solver.getNextEmptyCell((solver.solve(input)), -1));\n    done();\n  });\n\n  test('Solver returns the the expected solution for an incomplete puzzzle', function(done) {\n    let input = puzzle;\n    assert.equal(solver.solve(input), solution);\n    done();\n  });\n\n\n\n});\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1745680808304
  },
  "{\"sourceRoot\":\"/workspace/boilerplate-project-sudoku-solver/controllers/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/workspace/boilerplate-project-sudoku-solver\",\"filename\":\"/workspace/boilerplate-project-sudoku-solver/controllers/sudoku-solver.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/workspace/boilerplate-project-sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/controllers/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/workspace/boilerplate-project-sudoku-solver",
      "filename": "/workspace/boilerplate-project-sudoku-solver/controllers/sudoku-solver.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/workspace/boilerplate-project-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/workspace/boilerplate-project-sudoku-solver/controllers/sudoku-solver.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/workspace/boilerplate-project-sudoku-solver/controllers/sudoku-solver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/controllers/",
        "sourceFileName": "sudoku-solver.js"
      }
    },
    "ast": null,
    "code": "class SudokuSolver {\n  validate(puzzleString) {\n    //\n    const puzzle = puzzleString;\n\n    if (puzzle == \"\" || puzzle == null) {\n      return 'Required field missing';\n    } // regex to check for valid chars'\n\n\n    const validChars = /^[1-9.]+$/;\n\n    if (!validChars.test(puzzle)) {\n      return 'Invalid characters in puzzle';\n    } // check len\n\n\n    if (puzzle.length != 81) {\n      return 'Expected puzzle to be 81 characters long';\n    }\n  }\n\n  checkRowPlacement(puzzleString, row, column, value) {\n    row = row - 1;\n    column = column - 1;\n    value = value.toString();\n    let puzzleArray = puzzleString.split(\"\");\n    let rowStart = row * 9;\n    let rowEnd = rowStart + 9;\n    let rowArray = puzzleArray.slice(rowStart, rowEnd); //console.log(rowArray)\n\n    if (!rowArray.includes(value)) {\n      //console.log(`checkRowPlacement = true`)\n      return true;\n    } //console.log(`checkRowPlacement = false`)\n\n\n    return false;\n  }\n\n  checkColPlacement(puzzleString, row, column, value) {\n    row = row - 1;\n    column = column - 1;\n    value = value.toString();\n    let colArray = [];\n    let puzzleArray = puzzleString.split(\"\");\n\n    for (let i = column; i < puzzleString.length; i += 9) {\n      colArray.push(puzzleArray[i]);\n    } //console.log(colArray)\n\n\n    if (!colArray.includes(value)) {\n      //console.log(`checkColPlacement = true`)\n      return true;\n    } //console.log(`checkColPlacement = false`)\n\n\n    return false;\n  }\n\n  checkRegionPlacement(puzzleString, row, column, value) {\n    // row = row - 1;\n    // column = column - 1;\n    value = value.toString();\n    let puzzleArray = puzzleString.split(\"\");\n    let regionArr = [];\n    const valPos = (row - 1) * 9 + column - 1; //const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"]\n    // get the positioning in the 3x3 regionCol\n    // RC RC RC\n    // 00 01 02\n    // 10 11 12\n    // 20 21 22\n\n    let regionRow = row % 3 == 2 ? 1 : row % 3 == 1 ? 0 : 2;\n    let regionCol = column % 3 == 2 ? 1 : column % 3 == 1 ? 0 : 2;\n    let position = regionRow.toString() + regionCol.toString(); //console.log(`Value position: ${valPos}, R${regionRow}, C${regionCol}, Region: ${position}`)\n\n    switch (position) {\n      // handling of first row\n      case \"00\":\n        for (let i = 0; i < 19; i += 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos + i, valPos + i + 3));\n        } //console.log(regionArr)\n\n\n        break;\n\n      case \"01\":\n        for (let i = 0; i < 19; i += 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - 1 + i, valPos - 1 + i + 3));\n        } //console.log(regionArr)\n\n\n        break;\n\n      case \"02\":\n        for (let i = 0; i < 19; i += 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - 2 + i, valPos - 2 + i + 3));\n        } //console.log(regionArr)\n\n\n        break;\n      // handling of second row\n\n      case \"10\":\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 9, valPos - 6));\n        regionArr = regionArr.concat(puzzleArray.slice(valPos, valPos + 3));\n        regionArr = regionArr.concat(puzzleArray.slice(valPos + 9, valPos + 12)); //console.log(regionArr)\n\n        break;\n\n      case \"11\":\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 10, valPos - 7));\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 1, valPos + 2));\n        regionArr = regionArr.concat(puzzleArray.slice(valPos + 8, valPos + 11)); //console.log(regionArr)\n\n        break;\n\n      case \"12\":\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 11, valPos - 8));\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 2, valPos + 1));\n        regionArr = regionArr.concat(puzzleArray.slice(valPos + 7, valPos + 10)); //console.log(regionArr)\n\n        break;\n      // handling of third row\n\n      case \"20\":\n        for (let i = 18; i >= 0; i -= 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - i, valPos - i + 3));\n        } //console.log(regionArr)\n\n\n        break;\n\n      case \"21\":\n        for (let i = 18; i >= 0; i -= 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - 1 - i, valPos - 1 - i + 3));\n        } //console.log(regionArr)\n\n\n        break;\n\n      case \"22\":\n        for (let i = 18; i >= 0; i -= 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - 2 - i, valPos - 2 - i + 3));\n        } //console.log(regionArr)\n\n\n        break;\n\n      default:\n        console.log(\"error\");\n        break;\n    } //console.log(regionArr)\n\n\n    if (!regionArr.includes(value)) {\n      //console.log(`checkRegionPlacement = true`)\n      return true;\n    } //console.log(`checkRegionPlacement = false`)\n\n\n    return false;\n  }\n\n  comboPlacementCheck(puzzle, row, col, value) {\n    if (this.checkRowPlacement(puzzle, row, col, value) && this.checkColPlacement(puzzle, row, col, value) && this.checkRegionPlacement(puzzle, row, col, value)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  getNextEmptyCell(puzzleString) {\n    return puzzleString.indexOf(\".\");\n  }\n\n  solve(puzzleString) {\n    //console.log(`${puzzleString} ###START###`)\n    let nextBlankPosition = this.getNextEmptyCell(puzzleString); //console.log(`NextBlank = ${nextBlankPosition}`)\n\n    let blankRow = nextBlankPosition === -1 ? -1 : Math.floor(nextBlankPosition / 9) + 1;\n    let blankCol = nextBlankPosition === -1 ? -1 : nextBlankPosition % 9 + 1;\n\n    if (blankCol === -1) {\n      //console.log(`#############Base ${puzzleString}`)\n      return puzzleString;\n    }\n\n    let puzzleArray;\n\n    for (let y = 1; y <= 9; y++) {\n      //console.log(`row${blankRow} col${blankCol}, num${y}, rCheck = ${this.checkRowPlacement(puzzleString, blankRow, blankCol, y)} cCheck = ${this.checkColPlacement(puzzleString, blankRow, blankCol, y)}  gCheck = ${this.checkRegionPlacement(puzzleString, blankRow, blankCol, y)} `)\n      if (this.comboPlacementCheck(puzzleString, blankRow, blankCol, y)) {\n        puzzleArray = puzzleString.split(\"\");\n        puzzleArray[nextBlankPosition] = y.toString();\n        puzzleString = puzzleArray.join(\"\"); //this.solve(puzzleString);\n\n        puzzleString = this.solve(puzzleString); //console.log(`${puzzleString} returned string`)\n      }\n    } //console.log(`${puzzleString} before \".\" if. \"To replace position \" = ${nextBlankPosition}, next empty position = ${this.getNextEmptyCell(puzzleString)}`) //problem?\n\n\n    if (this.getNextEmptyCell(puzzleString) !== -1) {\n      //console.log(`${puzzleString} inside \".\" if. To replace position = ${nextBlankPosition}`)\n      puzzleArray = puzzleString.split(\"\");\n      puzzleArray[nextBlankPosition] = \".\";\n      puzzleString = puzzleArray.join(\"\");\n    } //console.log(`${puzzleString} before last return on \"To replace position \" = ${nextBlankPosition}, next empty position = ${this.getNextEmptyCell(puzzleString)}`) //problem?\n\n\n    return puzzleString;\n  }\n\n}\n\nmodule.exports = SudokuSolver;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sudoku-solver.js"
      ],
      "names": [
        "SudokuSolver",
        "validate",
        "puzzleString",
        "puzzle",
        "validChars",
        "test",
        "length",
        "checkRowPlacement",
        "row",
        "column",
        "value",
        "toString",
        "puzzleArray",
        "split",
        "rowStart",
        "rowEnd",
        "rowArray",
        "slice",
        "includes",
        "checkColPlacement",
        "colArray",
        "i",
        "push",
        "checkRegionPlacement",
        "regionArr",
        "valPos",
        "regionRow",
        "regionCol",
        "position",
        "concat",
        "console",
        "log",
        "comboPlacementCheck",
        "col",
        "getNextEmptyCell",
        "indexOf",
        "solve",
        "nextBlankPosition",
        "blankRow",
        "Math",
        "floor",
        "blankCol",
        "y",
        "join",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/controllers/",
      "sourcesContent": [
        "class SudokuSolver {\n\n  validate(puzzleString) {\n    //\n    const puzzle = puzzleString;\n\n    if (puzzle == \"\"  || puzzle == null) {\n      return 'Required field missing';\n    }\n\n    // regex to check for valid chars'\n    const validChars = /^[1-9.]+$/;\n\n    if (!validChars.test(puzzle)){\n      return 'Invalid characters in puzzle';\n    }\n\n    // check len\n    if (puzzle.length != 81 ){\n      return 'Expected puzzle to be 81 characters long';\n    }\n\n  }\n\n  checkRowPlacement(puzzleString, row, column, value) {\n    \n    row = row - 1;\n    column = column - 1;\n    value = value.toString()\n\n    let puzzleArray = puzzleString.split(\"\");\n    let rowStart = row * 9\n    let rowEnd = rowStart + 9\n    let rowArray = puzzleArray.slice(rowStart, rowEnd)\n    \n    //console.log(rowArray)\n\n    if (!rowArray.includes(value)) {\n        //console.log(`checkRowPlacement = true`)\n        return true\n    }\n\n    //console.log(`checkRowPlacement = false`)\n    return false\n  }\n\n  checkColPlacement(puzzleString, row, column, value) {\n\n    row = row - 1;\n    column = column - 1;\n    value = value.toString()\n    let colArray = []\n\n    let puzzleArray = puzzleString.split(\"\");\n\n    for (let i = column; i < puzzleString.length; i+=9) {\n      colArray.push(puzzleArray[i])\n    }\n    \n    //console.log(colArray)\n\n    if (!colArray.includes(value)) {\n        //console.log(`checkColPlacement = true`)\n        return true\n    }\n        \n    //console.log(`checkColPlacement = false`)\n    return false\n\n  }\n\n  checkRegionPlacement(puzzleString, row, column, value) {\n    // row = row - 1;\n    // column = column - 1;\n    value = value.toString()\n    let puzzleArray = puzzleString.split(\"\");\n    let regionArr = []\n    const valPos = (row - 1) * 9 + column - 1\n\n    //const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"]\n\n\n    // get the positioning in the 3x3 regionCol\n    \n    // RC RC RC\n    // 00 01 02\n    // 10 11 12\n    // 20 21 22\n\n    let regionRow = row % 3 == 2 ? 1 : row % 3 == 1 ? 0 : 2;\n    let regionCol = column % 3 == 2 ? 1 : column % 3 == 1 ? 0 : 2;\n    let position = regionRow.toString() + regionCol.toString()\n\n    //console.log(`Value position: ${valPos}, R${regionRow}, C${regionCol}, Region: ${position}`)\n\n    switch (position){\n\n      // handling of first row\n      case \"00\":\n        for (let i = 0; i < 19; i += 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos + i, valPos + i + 3))\n        }\n        //console.log(regionArr)\n        break;\n\n      case \"01\":\n        for (let i = 0; i < 19; i += 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - 1 + i, valPos - 1 + i + 3))\n        }\n        //console.log(regionArr)\n        break;\n\n      case \"02\":\n        for (let i = 0; i < 19; i += 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - 2 + i, valPos - 2 + i + 3))\n        }\n        //console.log(regionArr)\n        break;\n\n\n      // handling of second row\n\n      case \"10\":\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 9, valPos - 6))\n        regionArr = regionArr.concat(puzzleArray.slice(valPos, valPos + 3)) \n        regionArr = regionArr.concat(puzzleArray.slice(valPos + 9, valPos + 12)) \n        //console.log(regionArr)\n        break;\n\n      case \"11\":\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 10, valPos - 7))\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 1, valPos + 2)) \n        regionArr = regionArr.concat(puzzleArray.slice(valPos + 8, valPos + 11)) \n        //console.log(regionArr)\n        break;\n\n      case \"12\":\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 11, valPos - 8))\n        regionArr = regionArr.concat(puzzleArray.slice(valPos - 2, valPos + 1)) \n        regionArr = regionArr.concat(puzzleArray.slice(valPos + 7, valPos + 10)) \n        //console.log(regionArr)\n        break;\n\n      // handling of third row\n      case \"20\":\n        for (let i = 18; i >= 0; i -= 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - i, valPos - i + 3))\n        }\n        //console.log(regionArr)\n        break;\n\n      case \"21\":\n        for (let i = 18; i >= 0; i -= 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - 1 - i, valPos - 1 - i + 3))\n        }\n        //console.log(regionArr)\n        break;\n\n      case \"22\":\n        for (let i = 18; i >= 0; i -= 9) {\n          regionArr = regionArr.concat(puzzleArray.slice(valPos - 2 - i, valPos - 2 - i + 3))\n        }\n        //console.log(regionArr)\n        break;\n\n      default:\n      console.log(\"error\")\n      break;\n    }\n\n  //console.log(regionArr)\n\n    if (!regionArr.includes(value)) {\n        //console.log(`checkRegionPlacement = true`)\n        return true\n    }\n  \n  //console.log(`checkRegionPlacement = false`)\n  return false;\n\n  }\n\n  comboPlacementCheck(puzzle, row, col, value){\n\n    if (this.checkRowPlacement(puzzle, row, col, value) && this.checkColPlacement(puzzle, row, col, value) && this.checkRegionPlacement(puzzle, row, col, value)) {\n      return true\n    }\n\n    return false\n  }\n\n  getNextEmptyCell(puzzleString) {\n    return puzzleString.indexOf(\".\")\n  }\n\n\n  solve(puzzleString) {\n    //console.log(`${puzzleString} ###START###`)\n\n    let nextBlankPosition = this.getNextEmptyCell(puzzleString);\n    //console.log(`NextBlank = ${nextBlankPosition}`)\n    let blankRow = nextBlankPosition === -1 ? -1 : Math.floor(nextBlankPosition / 9) + 1;\n    let blankCol = nextBlankPosition === -1 ? -1 : (nextBlankPosition % 9) + 1;\n\n    if (blankCol === -1){\n      //console.log(`#############Base ${puzzleString}`)\n      return puzzleString;\n    }\n\n    let puzzleArray;\n\n    for (let y = 1; y <= 9; y++){\n      //console.log(`row${blankRow} col${blankCol}, num${y}, rCheck = ${this.checkRowPlacement(puzzleString, blankRow, blankCol, y)} cCheck = ${this.checkColPlacement(puzzleString, blankRow, blankCol, y)}  gCheck = ${this.checkRegionPlacement(puzzleString, blankRow, blankCol, y)} `)\n      if (this.comboPlacementCheck(puzzleString, blankRow, blankCol, y)) {\n        puzzleArray = puzzleString.split(\"\");\n        puzzleArray[nextBlankPosition] = y.toString();\n        puzzleString = puzzleArray.join(\"\");\n        //this.solve(puzzleString);\n        puzzleString = this.solve(puzzleString)\n        //console.log(`${puzzleString} returned string`)\n      }\n\n    }\n\n    //console.log(`${puzzleString} before \".\" if. \"To replace position \" = ${nextBlankPosition}, next empty position = ${this.getNextEmptyCell(puzzleString)}`) //problem?\n\n    if (this.getNextEmptyCell(puzzleString) !== -1){\n      //console.log(`${puzzleString} inside \".\" if. To replace position = ${nextBlankPosition}`)\n      puzzleArray = puzzleString.split(\"\");\n      puzzleArray[nextBlankPosition] = \".\";\n      puzzleString = puzzleArray.join(\"\");\n    }\n\n    //console.log(`${puzzleString} before last return on \"To replace position \" = ${nextBlankPosition}, next empty position = ${this.getNextEmptyCell(puzzleString)}`) //problem?\n    return puzzleString\n  }\n}\n\nmodule.exports = SudokuSolver;\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1745680808312
  },
  "{\"sourceRoot\":\"/workspace/boilerplate-project-sudoku-solver/tests/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/workspace/boilerplate-project-sudoku-solver\",\"filename\":\"/workspace/boilerplate-project-sudoku-solver/tests/2_functional-tests.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/workspace/boilerplate-project-sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/tests/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/workspace/boilerplate-project-sudoku-solver",
      "filename": "/workspace/boilerplate-project-sudoku-solver/tests/2_functional-tests.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/workspace/boilerplate-project-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/workspace/boilerplate-project-sudoku-solver/tests/2_functional-tests.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/workspace/boilerplate-project-sudoku-solver/tests/2_functional-tests.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/tests/",
        "sourceFileName": "2_functional-tests.js"
      }
    },
    "ast": null,
    "code": "const chai = require(\"chai\");\n\nconst chaiHttp = require('chai-http');\n\nconst assert = chai.assert;\nconst expect = chai.expect;\n\nconst server = require('../server');\n\nchai.use(chaiHttp);\n\nconst Solver = require('../controllers/sudoku-solver.js');\n\nlet solver = new Solver();\nlet puzzle = '..9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..';\nlet solution = \"769235418851496372432178956174569283395842761628713549283657194516924837947381625\";\nsuite('Functional Tests', () => {\n  test('Solve a puzzle with valid puzzle string: POST request to /api/solve', function (done) {\n    chai.request(server).post(`/api/solve`).set('content-type', 'application/json').send({\n      \"puzzle\": puzzle\n    }).end(function (err, res) {\n      //assert.equal(res.status, 200);\n      assert.propertyVal(res.body, 'solution', solution);\n      done();\n    });\n  });\n  test('Solve a puzzle with missing puzzle string: POST request to /api/solve', function (done) {\n    chai.request(server).post(`/api/solve`).set('content-type', 'application/json').send({}).end(function (err, res) {\n      //assert.equal(res.status, 200);\n      assert.propertyVal(res.body, 'error', \"Required field missing\");\n      done();\n    });\n  });\n  test('Solve a puzzle with invalid characters: POST request to /api/solve', function (done) {\n    chai.request(server).post(`/api/solve`).set('content-type', 'application/json').send({\n      \"puzzle\": \"x.9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..\"\n    }).end(function (err, res) {\n      //assert.equal(res.status, 200);\n      assert.propertyVal(res.body, 'error', \"Invalid characters in puzzle\");\n      done();\n    });\n  });\n  test('Solve a puzzle with incorrect length: POST request to /api/solve', function (done) {\n    chai.request(server).post(`/api/solve`).set('content-type', 'application/json').send({\n      \"puzzle\": \"123\"\n    }).end(function (err, res) {\n      //assert.equal(res.status, 200);\n      assert.propertyVal(res.body, 'error', \"Expected puzzle to be 81 characters long\");\n      done();\n    });\n  });\n  test('Solve a puzzle that cannot be solved: POST request to /api/solve', function (done) {\n    chai.request(server).post(`/api/solve`).set('content-type', 'application/json').send({\n      \"puzzle\": \"9.9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..\"\n    }).end(function (err, res) {\n      //assert.equal(res.status, 200);\n      assert.propertyVal(res.body, 'error', 'Puzzle cannot be solved');\n      done();\n    });\n  });\n  test('Check a puzzle placement with all fields: POST request to /api/check', function (done) {\n    chai.request(server).post(`/api/check`).set('content-type', 'application/json').send({\n      \"puzzle\": puzzle,\n      \"coordinate\": \"A1\",\n      \"value\": 7\n    }).end(function (err, res) {\n      //assert.equal(res.status, 200);\n      assert.propertyVal(res.body, 'valid', true);\n      done();\n    });\n  });\n  test('Check a puzzle placement with single placement conflict: POST request to /api/check', function (done) {\n    chai.request(server).post(`/api/check`).set('content-type', 'application/json').send({\n      \"puzzle\": puzzle,\n      \"coordinate\": \"A1\",\n      \"value\": 6\n    }).end(function (err, res) {\n      //assert.equal(res.status, 200);\n      assert.propertyVal(res.body, 'valid', false); //assert.propertyVal(res.body, 'conflict', [\"column\"] );\n\n      expect(res.body.conflict).to.include.ordered.members([\"column\"]);\n      done();\n    });\n  });\n  test('Check a puzzle placement with multiple placement conflicts: POST request to /api/check', function (done) {\n    chai.request(server).post(`/api/check`).set('content-type', 'application/json').send({\n      \"puzzle\": puzzle,\n      \"coordinate\": \"A1\",\n      \"value\": 1\n    }).end(function (err, res) {\n      //assert.equal(res.status, 200);\n      assert.propertyVal(res.body, 'valid', false); //assert.propertyVal(res.body, 'conflict', [\"row\", \"column\"] );\n\n      expect(res.body.conflict).to.include.ordered.members([\"row\", \"column\"]);\n      done();\n    });\n  });\n  test('Check a puzzle placement with all placement conflicts: POST request to /api/check', function (done) {\n    chai.request(server).post(`/api/check`).set('content-type', 'application/json').send({\n      \"puzzle\": puzzle,\n      \"coordinate\": \"A1\",\n      \"value\": 5\n    }).end(function (err, res) {\n      //assert.equal(res.status, 200);\n      assert.propertyVal(res.body, 'valid', false); //assert.propertyVal(res.body, 'conflict', [\"row\", \"column\", \"region\"]);\n\n      expect(res.body.conflict).to.include.ordered.members([\"row\", \"column\", \"region\"]);\n      done();\n    });\n  });\n  test('Check a puzzle placement with missing required fields: POST request to /api/check', function (done) {\n    chai.request(server).post(`/api/check`).set('content-type', 'application/json').send({}).end(function (err, res) {\n      //assert.equal(res.status, 200);\n      assert.propertyVal(res.body, 'error', \"Required field(s) missing\");\n      done();\n    });\n  });\n  test('Check a puzzle placement with invalid characters: POST request to /api/check', function (done) {\n    chai.request(server).post(`/api/check`).set('content-type', 'application/json').send({\n      \"puzzle\": \"x.9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..\",\n      \"coordinate\": \"A1\",\n      \"value\": 7\n    }).end(function (err, res) {\n      //assert.equal(res.status, 200);\n      assert.propertyVal(res.body, 'error', \"Invalid characters in puzzle\");\n      done();\n    });\n  });\n  test('Check a puzzle placement with incorrect length: POST request to /api/check', function (done) {\n    chai.request(server).post(`/api/check`).set('content-type', 'application/json').send({\n      \"puzzle\": \"1234\",\n      \"coordinate\": \"A1\",\n      \"value\": 7\n    }).end(function (err, res) {\n      //assert.equal(res.status, 200);\n      assert.propertyVal(res.body, 'error', \"Expected puzzle to be 81 characters long\");\n      done();\n    });\n  });\n  test('Check a puzzle placement with invalid placement coordinate: POST request to /api/check', function (done) {\n    chai.request(server).post(`/api/check`).set('content-type', 'application/json').send({\n      \"puzzle\": puzzle,\n      \"coordinate\": \"K1\",\n      \"value\": 7\n    }).end(function (err, res) {\n      //assert.equal(res.status, 200);\n      assert.propertyVal(res.body, 'error', \"Invalid coordinate\");\n      done();\n    });\n  });\n  test('Check a puzzle placement with invalid placement value: POST request to /api/check', function (done) {\n    chai.request(server).post(`/api/check`).set('content-type', 'application/json').send({\n      \"puzzle\": puzzle,\n      \"coordinate\": \"A1\",\n      \"value\": 10\n    }).end(function (err, res) {\n      //assert.equal(res.status, 200);\n      assert.propertyVal(res.body, 'error', \"Invalid value\");\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "2_functional-tests.js"
      ],
      "names": [
        "chai",
        "require",
        "chaiHttp",
        "assert",
        "expect",
        "server",
        "use",
        "Solver",
        "solver",
        "puzzle",
        "solution",
        "suite",
        "test",
        "done",
        "request",
        "post",
        "set",
        "send",
        "end",
        "err",
        "res",
        "propertyVal",
        "body",
        "conflict",
        "to",
        "include",
        "ordered",
        "members"
      ],
      "mappings": "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",
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/tests/",
      "sourcesContent": [
        "const chai = require(\"chai\");\nconst chaiHttp = require('chai-http');\nconst assert = chai.assert;\nconst expect = chai.expect;\nconst server = require('../server');\n\nchai.use(chaiHttp);\n\nconst Solver = require('../controllers/sudoku-solver.js');\nlet solver = new Solver();\nlet puzzle = '..9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..'\nlet solution = \"769235418851496372432178956174569283395842761628713549283657194516924837947381625\"\n\nsuite('Functional Tests', () => {\n\ntest('Solve a puzzle with valid puzzle string: POST request to /api/solve', function(done){\n        chai.request(server)\n          .post(`/api/solve`)\n          .set('content-type', 'application/json')\n          .send({\n            \"puzzle\": puzzle\n            })\n          .end(function(err, res){\n            //assert.equal(res.status, 200);\n            assert.propertyVal(res.body, 'solution', solution);\n            done();\n            });\n  });\n\ntest('Solve a puzzle with missing puzzle string: POST request to /api/solve', function(done){\n        chai.request(server)\n          .post(`/api/solve`)\n          .set('content-type', 'application/json')\n          .send({\n            })\n          .end(function(err, res){\n            //assert.equal(res.status, 200);\n            assert.propertyVal(res.body, 'error', \"Required field missing\");\n            done();\n            });\n  });\n\n\ntest('Solve a puzzle with invalid characters: POST request to /api/solve', function(done){\n        chai.request(server)\n          .post(`/api/solve`)\n          .set('content-type', 'application/json')\n          .send({\n            \"puzzle\": \"x.9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..\"\n            })\n          .end(function(err, res){\n            //assert.equal(res.status, 200);\n            assert.propertyVal(res.body, 'error', \"Invalid characters in puzzle\");\n            done();\n            });\n  });\n\n  test('Solve a puzzle with incorrect length: POST request to /api/solve', function(done){\n        chai.request(server)\n          .post(`/api/solve`)\n          .set('content-type', 'application/json')\n          .send({\n            \"puzzle\": \"123\"\n            })\n          .end(function(err, res){\n            //assert.equal(res.status, 200);\n            assert.propertyVal(res.body, 'error', \"Expected puzzle to be 81 characters long\");\n            done();\n            });\n  });\n\n  test('Solve a puzzle that cannot be solved: POST request to /api/solve', function(done){\n        chai.request(server)\n          .post(`/api/solve`)\n          .set('content-type', 'application/json')\n          .send({\n            \"puzzle\": \"9.9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..\"\n            })\n          .end(function(err, res){\n            //assert.equal(res.status, 200);\n            assert.propertyVal(res.body, 'error', 'Puzzle cannot be solved');\n            done();\n            });\n  });\n\n\n  test('Check a puzzle placement with all fields: POST request to /api/check', function(done){\n        chai.request(server)\n          .post(`/api/check`)\n          .set('content-type', 'application/json')\n          .send({\n            \"puzzle\": puzzle,\n            \"coordinate\": \"A1\",\n            \"value\": 7\n            })\n          .end(function(err, res){\n            //assert.equal(res.status, 200);\n            assert.propertyVal(res.body, 'valid', true);\n            done();\n            });\n  });\n\n  test('Check a puzzle placement with single placement conflict: POST request to /api/check', function(done){\n        chai.request(server)\n          .post(`/api/check`)\n          .set('content-type', 'application/json')\n          .send({\n            \"puzzle\": puzzle,\n            \"coordinate\": \"A1\",\n            \"value\": 6\n            })\n          .end(function(err, res){\n            //assert.equal(res.status, 200);\n            assert.propertyVal(res.body, 'valid', false);\n            //assert.propertyVal(res.body, 'conflict', [\"column\"] );\n            expect(res.body.conflict).to.include.ordered.members([\"column\"])\n            done();\n            });\n  });\n\n  test('Check a puzzle placement with multiple placement conflicts: POST request to /api/check', function(done){\n        chai.request(server)\n          .post(`/api/check`)\n          .set('content-type', 'application/json')\n          .send({\n            \"puzzle\": puzzle,\n            \"coordinate\": \"A1\",\n            \"value\": 1\n            })\n          .end(function(err, res){\n            //assert.equal(res.status, 200);\n            assert.propertyVal(res.body, 'valid', false);\n            //assert.propertyVal(res.body, 'conflict', [\"row\", \"column\"] );\n            expect(res.body.conflict).to.include.ordered.members([\"row\", \"column\"])\n            done();\n            });\n  });\n\n  test('Check a puzzle placement with all placement conflicts: POST request to /api/check', function(done){\n        chai.request(server)\n          .post(`/api/check`)\n          .set('content-type', 'application/json')\n          .send({\n            \"puzzle\": puzzle,\n            \"coordinate\": \"A1\",\n            \"value\": 5\n            })\n          .end(function(err, res){\n            //assert.equal(res.status, 200);\n            assert.propertyVal(res.body, 'valid', false);\n            //assert.propertyVal(res.body, 'conflict', [\"row\", \"column\", \"region\"]);\n            expect(res.body.conflict).to.include.ordered.members([\"row\", \"column\", \"region\"])\n            done();\n            });\n  });\n\n  test('Check a puzzle placement with missing required fields: POST request to /api/check', function(done){\n        chai.request(server)\n          .post(`/api/check`)\n          .set('content-type', 'application/json')\n          .send({\n            })\n          .end(function(err, res){\n            //assert.equal(res.status, 200);\n            assert.propertyVal(res.body, 'error', \"Required field(s) missing\");\n            done();\n            });\n  });\n\n  test('Check a puzzle placement with invalid characters: POST request to /api/check', function(done){\n        chai.request(server)\n          .post(`/api/check`)\n          .set('content-type', 'application/json')\n          .send({\n            \"puzzle\": \"x.9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..\",\n            \"coordinate\": \"A1\",\n            \"value\": 7\n            })\n          .end(function(err, res){\n            //assert.equal(res.status, 200);\n            assert.propertyVal(res.body, 'error', \"Invalid characters in puzzle\");\n            done();\n            });\n  });\n\n  test('Check a puzzle placement with incorrect length: POST request to /api/check', function(done){\n        chai.request(server)\n          .post(`/api/check`)\n          .set('content-type', 'application/json')\n          .send({\n            \"puzzle\": \"1234\",\n            \"coordinate\": \"A1\",\n            \"value\": 7\n            })\n          .end(function(err, res){\n            //assert.equal(res.status, 200);\n            assert.propertyVal(res.body, 'error', \"Expected puzzle to be 81 characters long\");\n            done();\n            });\n  });\n\n  test('Check a puzzle placement with invalid placement coordinate: POST request to /api/check', function(done){\n        chai.request(server)\n          .post(`/api/check`)\n          .set('content-type', 'application/json')\n          .send({\n            \"puzzle\": puzzle,\n            \"coordinate\": \"K1\",\n            \"value\": 7\n            })\n          .end(function(err, res){\n            //assert.equal(res.status, 200);\n            assert.propertyVal(res.body, 'error', \"Invalid coordinate\");\n            done();\n            });\n  });\n\n  test('Check a puzzle placement with invalid placement value: POST request to /api/check', function(done){\n        chai.request(server)\n          .post(`/api/check`)\n          .set('content-type', 'application/json')\n          .send({\n            \"puzzle\": puzzle,\n            \"coordinate\": \"A1\",\n            \"value\": 10\n            })\n          .end(function(err, res){\n            //assert.equal(res.status, 200);\n            assert.propertyVal(res.body, 'error', \"Invalid value\");\n            done();\n            });\n  });\n\n\n});\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1745680808304
  },
  "{\"sourceRoot\":\"/workspace/boilerplate-project-sudoku-solver/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/workspace/boilerplate-project-sudoku-solver\",\"filename\":\"/workspace/boilerplate-project-sudoku-solver/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/workspace/boilerplate-project-sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/workspace/boilerplate-project-sudoku-solver",
      "filename": "/workspace/boilerplate-project-sudoku-solver/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/workspace/boilerplate-project-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/workspace/boilerplate-project-sudoku-solver/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/workspace/boilerplate-project-sudoku-solver/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "require('dotenv').config();\n\nconst express = require('express');\n\nconst bodyParser = require('body-parser');\n\nconst expect = require('chai').expect;\n\nconst cors = require('cors');\n\nconst fccTestingRoutes = require('./routes/fcctesting.js');\n\nconst apiRoutes = require('./routes/api.js');\n\nconst runner = require('./test-runner');\n\nconst app = express();\napp.use('/public', express.static(process.cwd() + '/public'));\napp.use(cors({\n  origin: '*'\n})); //For FCC testing purposes only\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n})); //Index page (static HTML)\n\napp.route('/').get(function (req, res) {\n  res.sendFile(process.cwd() + '/views/index.html');\n}); //For FCC testing purposes\n\nfccTestingRoutes(app); // User routes\n\napiRoutes(app); //404 Not Found Middleware\n\napp.use(function (req, res, next) {\n  res.status(404).type('text').send('Not Found');\n}); //Start our server and tests!\n\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, function () {\n  console.log(\"Listening on port \" + PORT); // process.env.NODE_ENV='test'\n\n  if (process.env.NODE_ENV === 'test') {\n    console.log('Running Tests...');\n    setTimeout(function () {\n      try {\n        runner.run();\n      } catch (error) {\n        console.log('Tests are not valid:');\n        console.error(error);\n      }\n    }, 1500);\n  }\n});\nmodule.exports = app; // for testing\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiZXhwcmVzcyIsImJvZHlQYXJzZXIiLCJleHBlY3QiLCJjb3JzIiwiZmNjVGVzdGluZ1JvdXRlcyIsImFwaVJvdXRlcyIsInJ1bm5lciIsImFwcCIsInVzZSIsInN0YXRpYyIsInByb2Nlc3MiLCJjd2QiLCJvcmlnaW4iLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwicm91dGUiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kRmlsZSIsIm5leHQiLCJzdGF0dXMiLCJ0eXBlIiwic2VuZCIsIlBPUlQiLCJlbnYiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIiwiTk9ERV9FTlYiLCJzZXRUaW1lb3V0IiwicnVuIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQUEsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsTUFBbEI7O0FBQ0EsTUFBTUMsT0FBTyxHQUFPRixPQUFPLENBQUMsU0FBRCxDQUEzQjs7QUFDQSxNQUFNRyxVQUFVLEdBQUlILE9BQU8sQ0FBQyxhQUFELENBQTNCOztBQUNBLE1BQU1JLE1BQU0sR0FBUUosT0FBTyxDQUFDLE1BQUQsQ0FBUCxDQUFnQkksTUFBcEM7O0FBQ0EsTUFBTUMsSUFBSSxHQUFVTCxPQUFPLENBQUMsTUFBRCxDQUEzQjs7QUFFQSxNQUFNTSxnQkFBZ0IsR0FBSU4sT0FBTyxDQUFDLHdCQUFELENBQWpDOztBQUNBLE1BQU1PLFNBQVMsR0FBV1AsT0FBTyxDQUFDLGlCQUFELENBQWpDOztBQUNBLE1BQU1RLE1BQU0sR0FBY1IsT0FBTyxDQUFDLGVBQUQsQ0FBakM7O0FBRUEsTUFBTVMsR0FBRyxHQUFHUCxPQUFPLEVBQW5CO0FBRUFPLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFNBQVIsRUFBbUJSLE9BQU8sQ0FBQ1MsTUFBUixDQUFlQyxPQUFPLENBQUNDLEdBQVIsS0FBZ0IsU0FBL0IsQ0FBbkI7QUFDQUosR0FBRyxDQUFDQyxHQUFKLENBQVFMLElBQUksQ0FBQztBQUFDUyxFQUFBQSxNQUFNLEVBQUU7QUFBVCxDQUFELENBQVosRSxDQUE4Qjs7QUFFOUJMLEdBQUcsQ0FBQ0MsR0FBSixDQUFRUCxVQUFVLENBQUNZLElBQVgsRUFBUjtBQUNBTixHQUFHLENBQUNDLEdBQUosQ0FBUVAsVUFBVSxDQUFDYSxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVIsRSxDQUVBOztBQUNBUixHQUFHLENBQUNTLEtBQUosQ0FBVSxHQUFWLEVBQ0dDLEdBREgsQ0FDTyxVQUFVQyxHQUFWLEVBQWVDLEdBQWYsRUFBb0I7QUFDdkJBLEVBQUFBLEdBQUcsQ0FBQ0MsUUFBSixDQUFhVixPQUFPLENBQUNDLEdBQVIsS0FBZ0IsbUJBQTdCO0FBQ0QsQ0FISCxFLENBS0E7O0FBQ0FQLGdCQUFnQixDQUFDRyxHQUFELENBQWhCLEMsQ0FFQTs7QUFDQUYsU0FBUyxDQUFDRSxHQUFELENBQVQsQyxDQUVBOztBQUNBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFTVSxHQUFULEVBQWNDLEdBQWQsRUFBbUJFLElBQW5CLEVBQXlCO0FBQy9CRixFQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBVyxHQUFYLEVBQ0dDLElBREgsQ0FDUSxNQURSLEVBRUdDLElBRkgsQ0FFUSxXQUZSO0FBR0QsQ0FKRCxFLENBTUE7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHZixPQUFPLENBQUNnQixHQUFSLENBQVlELElBQVosSUFBb0IsSUFBakM7QUFDQWxCLEdBQUcsQ0FBQ29CLE1BQUosQ0FBV0YsSUFBWCxFQUFpQixZQUFZO0FBQzNCRyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx1QkFBdUJKLElBQW5DLEVBRDJCLENBRTNCOztBQUNBLE1BQUlmLE9BQU8sQ0FBQ2dCLEdBQVIsQ0FBWUksUUFBWixLQUF1QixNQUEzQixFQUFtQztBQUNqQ0YsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksa0JBQVo7QUFDQUUsSUFBQUEsVUFBVSxDQUFDLFlBQVk7QUFDckIsVUFBSTtBQUNGekIsUUFBQUEsTUFBTSxDQUFDMEIsR0FBUDtBQUNELE9BRkQsQ0FFRSxPQUFPQyxLQUFQLEVBQWM7QUFDZEwsUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksc0JBQVo7QUFDQUQsUUFBQUEsT0FBTyxDQUFDSyxLQUFSLENBQWNBLEtBQWQ7QUFDRDtBQUNGLEtBUFMsRUFPUCxJQVBPLENBQVY7QUFRRDtBQUNGLENBZEQ7QUFnQkFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjVCLEdBQWpCLEMsQ0FBc0IiLCJzb3VyY2VSb290IjoiL3dvcmtzcGFjZS9ib2lsZXJwbGF0ZS1wcm9qZWN0LXN1ZG9rdS1zb2x2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnZG90ZW52JykuY29uZmlnKCk7XG5jb25zdCBleHByZXNzICAgICA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IGJvZHlQYXJzZXIgID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcbmNvbnN0IGV4cGVjdCAgICAgID0gcmVxdWlyZSgnY2hhaScpLmV4cGVjdDtcbmNvbnN0IGNvcnMgICAgICAgID0gcmVxdWlyZSgnY29ycycpO1xuXG5jb25zdCBmY2NUZXN0aW5nUm91dGVzICA9IHJlcXVpcmUoJy4vcm91dGVzL2ZjY3Rlc3RpbmcuanMnKTtcbmNvbnN0IGFwaVJvdXRlcyAgICAgICAgID0gcmVxdWlyZSgnLi9yb3V0ZXMvYXBpLmpzJyk7XG5jb25zdCBydW5uZXIgICAgICAgICAgICA9IHJlcXVpcmUoJy4vdGVzdC1ydW5uZXInKTtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5hcHAudXNlKCcvcHVibGljJywgZXhwcmVzcy5zdGF0aWMocHJvY2Vzcy5jd2QoKSArICcvcHVibGljJykpO1xuYXBwLnVzZShjb3JzKHtvcmlnaW46ICcqJ30pKTsgLy9Gb3IgRkNDIHRlc3RpbmcgcHVycG9zZXMgb25seVxuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuXG4vL0luZGV4IHBhZ2UgKHN0YXRpYyBIVE1MKVxuYXBwLnJvdXRlKCcvJylcbiAgLmdldChmdW5jdGlvbiAocmVxLCByZXMpIHtcbiAgICByZXMuc2VuZEZpbGUocHJvY2Vzcy5jd2QoKSArICcvdmlld3MvaW5kZXguaHRtbCcpO1xuICB9KTtcblxuLy9Gb3IgRkNDIHRlc3RpbmcgcHVycG9zZXNcbmZjY1Rlc3RpbmdSb3V0ZXMoYXBwKTtcblxuLy8gVXNlciByb3V0ZXNcbmFwaVJvdXRlcyhhcHApO1xuICAgIFxuLy80MDQgTm90IEZvdW5kIE1pZGRsZXdhcmVcbmFwcC51c2UoZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgcmVzLnN0YXR1cyg0MDQpXG4gICAgLnR5cGUoJ3RleHQnKVxuICAgIC5zZW5kKCdOb3QgRm91bmQnKTtcbn0pO1xuXG4vL1N0YXJ0IG91ciBzZXJ2ZXIgYW5kIHRlc3RzIVxuY29uc3QgUE9SVCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMFxuYXBwLmxpc3RlbihQT1JULCBmdW5jdGlvbiAoKSB7XG4gIGNvbnNvbGUubG9nKFwiTGlzdGVuaW5nIG9uIHBvcnQgXCIgKyBQT1JUKTtcbiAgLy8gcHJvY2Vzcy5lbnYuTk9ERV9FTlY9J3Rlc3QnXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOVj09PSd0ZXN0Jykge1xuICAgIGNvbnNvbGUubG9nKCdSdW5uaW5nIFRlc3RzLi4uJyk7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICB0cnkge1xuICAgICAgICBydW5uZXIucnVuKCk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmxvZygnVGVzdHMgYXJlIG5vdCB2YWxpZDonKTtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICB9XG4gICAgfSwgMTUwMCk7XG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFwcDsgLy8gZm9yIHRlc3RpbmdcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "require",
        "config",
        "express",
        "bodyParser",
        "expect",
        "cors",
        "fccTestingRoutes",
        "apiRoutes",
        "runner",
        "app",
        "use",
        "static",
        "process",
        "cwd",
        "origin",
        "json",
        "urlencoded",
        "extended",
        "route",
        "get",
        "req",
        "res",
        "sendFile",
        "next",
        "status",
        "type",
        "send",
        "PORT",
        "env",
        "listen",
        "console",
        "log",
        "NODE_ENV",
        "setTimeout",
        "run",
        "error",
        "module",
        "exports"
      ],
      "mappings": "AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,OAAO,GAAOF,OAAO,CAAC,SAAD,CAA3B;;AACA,MAAMG,UAAU,GAAIH,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAMI,MAAM,GAAQJ,OAAO,CAAC,MAAD,CAAP,CAAgBI,MAApC;;AACA,MAAMC,IAAI,GAAUL,OAAO,CAAC,MAAD,CAA3B;;AAEA,MAAMM,gBAAgB,GAAIN,OAAO,CAAC,wBAAD,CAAjC;;AACA,MAAMO,SAAS,GAAWP,OAAO,CAAC,iBAAD,CAAjC;;AACA,MAAMQ,MAAM,GAAcR,OAAO,CAAC,eAAD,CAAjC;;AAEA,MAAMS,GAAG,GAAGP,OAAO,EAAnB;AAEAO,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBR,OAAO,CAACS,MAAR,CAAeC,OAAO,CAACC,GAAR,KAAgB,SAA/B,CAAnB;AACAJ,GAAG,CAACC,GAAJ,CAAQL,IAAI,CAAC;AAACS,EAAAA,MAAM,EAAE;AAAT,CAAD,CAAZ,E,CAA8B;;AAE9BL,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACY,IAAX,EAAR;AACAN,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACa,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAR,GAAG,CAACS,KAAJ,CAAU,GAAV,EACGC,GADH,CACO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACvBA,EAAAA,GAAG,CAACC,QAAJ,CAAaV,OAAO,CAACC,GAAR,KAAgB,mBAA7B;AACD,CAHH,E,CAKA;;AACAP,gBAAgB,CAACG,GAAD,CAAhB,C,CAEA;;AACAF,SAAS,CAACE,GAAD,CAAT,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,UAASU,GAAT,EAAcC,GAAd,EAAmBE,IAAnB,EAAyB;AAC/BF,EAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EACGC,IADH,CACQ,MADR,EAEGC,IAFH,CAEQ,WAFR;AAGD,CAJD,E,CAMA;;AACA,MAAMC,IAAI,GAAGf,OAAO,CAACgB,GAAR,CAAYD,IAAZ,IAAoB,IAAjC;AACAlB,GAAG,CAACoB,MAAJ,CAAWF,IAAX,EAAiB,YAAY;AAC3BG,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBJ,IAAnC,EAD2B,CAE3B;;AACA,MAAIf,OAAO,CAACgB,GAAR,CAAYI,QAAZ,KAAuB,MAA3B,EAAmC;AACjCF,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAE,IAAAA,UAAU,CAAC,YAAY;AACrB,UAAI;AACFzB,QAAAA,MAAM,CAAC0B,GAAP;AACD,OAFD,CAEE,OAAOC,KAAP,EAAc;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,QAAAA,OAAO,CAACK,KAAR,CAAcA,KAAd;AACD;AACF,KAPS,EAOP,IAPO,CAAV;AAQD;AACF,CAdD;AAgBAC,MAAM,CAACC,OAAP,GAAiB5B,GAAjB,C,CAAsB",
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/",
      "sourcesContent": [
        "require('dotenv').config();\nconst express     = require('express');\nconst bodyParser  = require('body-parser');\nconst expect      = require('chai').expect;\nconst cors        = require('cors');\n\nconst fccTestingRoutes  = require('./routes/fcctesting.js');\nconst apiRoutes         = require('./routes/api.js');\nconst runner            = require('./test-runner');\n\nconst app = express();\n\napp.use('/public', express.static(process.cwd() + '/public'));\napp.use(cors({origin: '*'})); //For FCC testing purposes only\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\n//Index page (static HTML)\napp.route('/')\n  .get(function (req, res) {\n    res.sendFile(process.cwd() + '/views/index.html');\n  });\n\n//For FCC testing purposes\nfccTestingRoutes(app);\n\n// User routes\napiRoutes(app);\n    \n//404 Not Found Middleware\napp.use(function(req, res, next) {\n  res.status(404)\n    .type('text')\n    .send('Not Found');\n});\n\n//Start our server and tests!\nconst PORT = process.env.PORT || 3000\napp.listen(PORT, function () {\n  console.log(\"Listening on port \" + PORT);\n  // process.env.NODE_ENV='test'\n  if (process.env.NODE_ENV==='test') {\n    console.log('Running Tests...');\n    setTimeout(function () {\n      try {\n        runner.run();\n      } catch (error) {\n        console.log('Tests are not valid:');\n        console.error(error);\n      }\n    }, 1500);\n  }\n});\n\nmodule.exports = app; // for testing\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1745680807048
  },
  "{\"sourceRoot\":\"/workspace/boilerplate-project-sudoku-solver/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/workspace/boilerplate-project-sudoku-solver\",\"filename\":\"/workspace/boilerplate-project-sudoku-solver/routes/fcctesting.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/workspace/boilerplate-project-sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/workspace/boilerplate-project-sudoku-solver",
      "filename": "/workspace/boilerplate-project-sudoku-solver/routes/fcctesting.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/workspace/boilerplate-project-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/workspace/boilerplate-project-sudoku-solver/routes/fcctesting.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/workspace/boilerplate-project-sudoku-solver/routes/fcctesting.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/routes/",
        "sourceFileName": "fcctesting.js"
      }
    },
    "ast": null,
    "code": "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n'use strict';\n\nconst cors = require('cors');\n\nconst fs = require('fs');\n\nconst runner = require('../test-runner');\n\nmodule.exports = function (app) {\n  app.route('/_api/server.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/server.js', function (err, data) {\n      if (err) return next(err);\n      res.send(data.toString());\n    });\n  });\n  app.route('/_api/routes/api.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/routes/api.js', function (err, data) {\n      if (err) return next(err);\n      res.type('txt').send(data.toString());\n    });\n  });\n  app.route('/_api/controllers/convertHandler.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/controllers/convertHandler.js', function (err, data) {\n      if (err) return next(err);\n      res.type('txt').send(data.toString());\n    });\n  });\n  let error;\n  app.get('/_api/get-tests', cors(), function (req, res, next) {\n    console.log(error);\n    if (!error && process.env.NODE_ENV === 'test') return next();\n    res.json({\n      status: 'unavailable'\n    });\n  }, function (req, res, next) {\n    if (!runner.report) return next();\n    res.json(testFilter(runner.report, req.query.type, req.query.n));\n  }, function (req, res) {\n    runner.on('done', function (report) {\n      process.nextTick(() => res.json(testFilter(runner.report, req.query.type, req.query.n)));\n    });\n  });\n  app.get('/_api/app-info', function (req, res) {\n    let hs = Object.keys(res._headers).filter(h => !h.match(/^access-control-\\w+/));\n    let hObj = {};\n    hs.forEach(h => {\n      hObj[h] = res._headers[h];\n    });\n    delete res._headers['strict-transport-security'];\n    res.json({\n      headers: hObj\n    });\n  });\n};\n\nfunction testFilter(tests, type, n) {\n  let out;\n\n  switch (type) {\n    case 'unit':\n      out = tests.filter(t => t.context.match('Unit Tests'));\n      break;\n\n    case 'functional':\n      out = tests.filter(t => t.context.match('Functional Tests') && !t.title.match('#example'));\n      break;\n\n    default:\n      out = tests;\n  }\n\n  if (n !== undefined) {\n    return out[n] || out;\n  }\n\n  return out;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "fcctesting.js"
      ],
      "names": [
        "cors",
        "require",
        "fs",
        "runner",
        "module",
        "exports",
        "app",
        "route",
        "get",
        "req",
        "res",
        "next",
        "console",
        "log",
        "readFile",
        "__dirname",
        "err",
        "data",
        "send",
        "toString",
        "type",
        "error",
        "process",
        "env",
        "NODE_ENV",
        "json",
        "status",
        "report",
        "testFilter",
        "query",
        "n",
        "on",
        "nextTick",
        "hs",
        "Object",
        "keys",
        "_headers",
        "filter",
        "h",
        "match",
        "hObj",
        "forEach",
        "headers",
        "tests",
        "out",
        "t",
        "context",
        "title",
        "undefined"
      ],
      "mappings": "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",
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/routes/",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\n'use strict';\n\nconst cors = require('cors');\nconst fs = require('fs');\nconst runner = require('../test-runner');\n\nmodule.exports = function (app) {\n\n  app.route('/_api/server.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/server.js', function(err, data) {\n        if(err) return next(err);\n        res.send(data.toString());\n      });\n    });\n  app.route('/_api/routes/api.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/routes/api.js', function(err, data) {\n        if(err) return next(err);\n        res.type('txt').send(data.toString());\n      });\n    });\n  app.route('/_api/controllers/convertHandler.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/controllers/convertHandler.js', function(err, data) {\n        if(err) return next(err);\n        res.type('txt').send(data.toString());\n      });\n    });\n    \n  let error;\n  app.get('/_api/get-tests', cors(), function(req, res, next){\n    console.log(error);\n    if(!error && process.env.NODE_ENV === 'test') return next();\n    res.json({status: 'unavailable'});\n  },\n  function(req, res, next){\n    if(!runner.report) return next();\n    res.json(testFilter(runner.report, req.query.type, req.query.n));\n  },\n  function(req, res){\n    runner.on('done', function(report){\n      process.nextTick(() =>  res.json(testFilter(runner.report, req.query.type, req.query.n)));\n    });\n  });\n  app.get('/_api/app-info', function(req, res) {\n    let hs = Object.keys(res._headers)\n      .filter(h => !h.match(/^access-control-\\w+/));\n    let hObj = {};\n    hs.forEach(h => {hObj[h] = res._headers[h]});\n    delete res._headers['strict-transport-security'];\n    res.json({headers: hObj});\n  });\n  \n};\n\nfunction testFilter(tests, type, n) {\n  let out;\n  switch (type) {\n    case 'unit' :\n      out = tests.filter(t => t.context.match('Unit Tests'));\n      break;\n    case 'functional':\n      out = tests.filter(t => t.context.match('Functional Tests') && !t.title.match('#example'));\n      break;\n    default:\n      out = tests;\n  }\n  if(n !== undefined) {\n    return out[n] || out;\n  }\n  return out;\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1745680808304
  },
  "{\"sourceRoot\":\"/workspace/boilerplate-project-sudoku-solver/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/workspace/boilerplate-project-sudoku-solver\",\"filename\":\"/workspace/boilerplate-project-sudoku-solver/test-runner.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/workspace/boilerplate-project-sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/workspace/boilerplate-project-sudoku-solver",
      "filename": "/workspace/boilerplate-project-sudoku-solver/test-runner.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/workspace/boilerplate-project-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/workspace/boilerplate-project-sudoku-solver/test-runner.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/workspace/boilerplate-project-sudoku-solver/test-runner.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/",
        "sourceFileName": "test-runner.js"
      }
    },
    "ast": null,
    "code": "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\nconst analyser = require('./assertion-analyser');\n\nconst EventEmitter = require('events').EventEmitter;\n\nconst Mocha = require('mocha'),\n      fs = require('fs'),\n      path = require('path');\n\nrequire(\"@babel/register\");\n\nconst mocha = new Mocha({\n  timeout: 5000\n});\nconst testDir = './tests'; // Add each .js file to the mocha instance\n\nfs.readdirSync(testDir).filter(function (file) {\n  // Only keep the .js files\n  return file.substr(-3) === '.js';\n}).forEach(function (file) {\n  mocha.addFile(path.join(testDir, file));\n});\nlet emitter = new EventEmitter();\n\nemitter.run = function () {\n  let tests = [];\n  let context = \"\";\n  let separator = ' -> '; // Run the tests.\n\n  try {\n    let runner = mocha.ui('tdd').run().on('test end', function (test) {\n      // remove comments\n      let body = test.body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, ''); // collapse spaces\n\n      body = body.replace(/\\s+/g, ' ');\n      let obj = {\n        title: test.title,\n        context: context.slice(0, -separator.length),\n        state: test.state,\n        // body: body,\n        assertions: analyser(body)\n      };\n      tests.push(obj);\n    }).on('end', function () {\n      emitter.report = tests;\n      emitter.emit('done', tests);\n    }).on('suite', function (s) {\n      context += s.title + separator;\n    }).on('suite end', function (s) {\n      context = context.slice(0, -(s.title.length + separator.length));\n    });\n  } catch (e) {\n    throw e;\n  }\n};\n\nmodule.exports = emitter;\n/*\n * Mocha.runner Events:\n * can be used to build a better custom report\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QtcnVubmVyLmpzIl0sIm5hbWVzIjpbImFuYWx5c2VyIiwicmVxdWlyZSIsIkV2ZW50RW1pdHRlciIsIk1vY2hhIiwiZnMiLCJwYXRoIiwibW9jaGEiLCJ0aW1lb3V0IiwidGVzdERpciIsInJlYWRkaXJTeW5jIiwiZmlsdGVyIiwiZmlsZSIsInN1YnN0ciIsImZvckVhY2giLCJhZGRGaWxlIiwiam9pbiIsImVtaXR0ZXIiLCJydW4iLCJ0ZXN0cyIsImNvbnRleHQiLCJzZXBhcmF0b3IiLCJydW5uZXIiLCJ1aSIsIm9uIiwidGVzdCIsImJvZHkiLCJyZXBsYWNlIiwib2JqIiwidGl0bGUiLCJzbGljZSIsImxlbmd0aCIsInN0YXRlIiwiYXNzZXJ0aW9ucyIsInB1c2giLCJyZXBvcnQiLCJlbWl0IiwicyIsImUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsc0JBQUQsQ0FBeEI7O0FBQ0EsTUFBTUMsWUFBWSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxZQUF2Qzs7QUFFQSxNQUFNQyxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxPQUFELENBQXJCO0FBQUEsTUFDSUcsRUFBRSxHQUFHSCxPQUFPLENBQUMsSUFBRCxDQURoQjtBQUFBLE1BRUlJLElBQUksR0FBR0osT0FBTyxDQUFDLE1BQUQsQ0FGbEI7O0FBR0lBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQOztBQUVKLE1BQU1LLEtBQUssR0FBRyxJQUFJSCxLQUFKLENBQVU7QUFBRUksRUFBQUEsT0FBTyxFQUFFO0FBQVgsQ0FBVixDQUFkO0FBQ0EsTUFBTUMsT0FBTyxHQUFHLFNBQWhCLEMsQ0FHQTs7QUFDQUosRUFBRSxDQUFDSyxXQUFILENBQWVELE9BQWYsRUFBd0JFLE1BQXhCLENBQStCLFVBQVNDLElBQVQsRUFBYztBQUN6QztBQUNBLFNBQU9BLElBQUksQ0FBQ0MsTUFBTCxDQUFZLENBQUMsQ0FBYixNQUFvQixLQUEzQjtBQUVILENBSkQsRUFJR0MsT0FKSCxDQUlXLFVBQVNGLElBQVQsRUFBYztBQUNyQkwsRUFBQUEsS0FBSyxDQUFDUSxPQUFOLENBQ0lULElBQUksQ0FBQ1UsSUFBTCxDQUFVUCxPQUFWLEVBQW1CRyxJQUFuQixDQURKO0FBR0gsQ0FSRDtBQVVBLElBQUlLLE9BQU8sR0FBRyxJQUFJZCxZQUFKLEVBQWQ7O0FBQ0FjLE9BQU8sQ0FBQ0MsR0FBUixHQUFjLFlBQVc7QUFFdkIsTUFBSUMsS0FBSyxHQUFHLEVBQVo7QUFDQSxNQUFJQyxPQUFPLEdBQUcsRUFBZDtBQUNBLE1BQUlDLFNBQVMsR0FBRyxNQUFoQixDQUp1QixDQUt2Qjs7QUFDQSxNQUFJO0FBQ0osUUFBSUMsTUFBTSxHQUFHZixLQUFLLENBQUNnQixFQUFOLENBQVMsS0FBVCxFQUFnQkwsR0FBaEIsR0FDVk0sRUFEVSxDQUNQLFVBRE8sRUFDSyxVQUFTQyxJQUFULEVBQWU7QUFDM0I7QUFDQSxVQUFJQyxJQUFJLEdBQUdELElBQUksQ0FBQ0MsSUFBTCxDQUFVQyxPQUFWLENBQWtCLHNCQUFsQixFQUEwQyxFQUExQyxDQUFYLENBRjJCLENBRzNCOztBQUNBRCxNQUFBQSxJQUFJLEdBQUdBLElBQUksQ0FBQ0MsT0FBTCxDQUFhLE1BQWIsRUFBb0IsR0FBcEIsQ0FBUDtBQUNBLFVBQUlDLEdBQUcsR0FBRztBQUNSQyxRQUFBQSxLQUFLLEVBQUVKLElBQUksQ0FBQ0ksS0FESjtBQUVSVCxRQUFBQSxPQUFPLEVBQUVBLE9BQU8sQ0FBQ1UsS0FBUixDQUFjLENBQWQsRUFBaUIsQ0FBQ1QsU0FBUyxDQUFDVSxNQUE1QixDQUZEO0FBR1JDLFFBQUFBLEtBQUssRUFBRVAsSUFBSSxDQUFDTyxLQUhKO0FBSVI7QUFDQUMsUUFBQUEsVUFBVSxFQUFFaEMsUUFBUSxDQUFDeUIsSUFBRDtBQUxaLE9BQVY7QUFPQVAsTUFBQUEsS0FBSyxDQUFDZSxJQUFOLENBQVdOLEdBQVg7QUFDSCxLQWRVLEVBZVZKLEVBZlUsQ0FlUCxLQWZPLEVBZUEsWUFBVztBQUNsQlAsTUFBQUEsT0FBTyxDQUFDa0IsTUFBUixHQUFpQmhCLEtBQWpCO0FBQ0FGLE1BQUFBLE9BQU8sQ0FBQ21CLElBQVIsQ0FBYSxNQUFiLEVBQXFCakIsS0FBckI7QUFDSCxLQWxCVSxFQW1CVkssRUFuQlUsQ0FtQlAsT0FuQk8sRUFtQkUsVUFBU2EsQ0FBVCxFQUFZO0FBQ3ZCakIsTUFBQUEsT0FBTyxJQUFLaUIsQ0FBQyxDQUFDUixLQUFGLEdBQVVSLFNBQXRCO0FBRUQsS0F0QlUsRUF1QlZHLEVBdkJVLENBdUJQLFdBdkJPLEVBdUJNLFVBQVNhLENBQVQsRUFBWTtBQUMzQmpCLE1BQUFBLE9BQU8sR0FBR0EsT0FBTyxDQUFDVSxLQUFSLENBQWMsQ0FBZCxFQUFpQixFQUFFTyxDQUFDLENBQUNSLEtBQUYsQ0FBUUUsTUFBUixHQUFpQlYsU0FBUyxDQUFDVSxNQUE3QixDQUFqQixDQUFWO0FBQ0QsS0F6QlUsQ0FBYjtBQTBCQyxHQTNCRCxDQTJCRSxPQUFNTyxDQUFOLEVBQVM7QUFDVCxVQUFNQSxDQUFOO0FBQ0Q7QUFDRixDQXBDRDs7QUFzQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnZCLE9BQWpCO0FBRUEiLCJzb3VyY2VSb290IjoiL3dvcmtzcGFjZS9ib2lsZXJwbGF0ZS1wcm9qZWN0LXN1ZG9rdS1zb2x2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiLypcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbiogICAgICAgRE8gTk9UIEVESVQgVEhJUyBGSUxFXG4qICAgICAgIEZvciBGQ0MgdGVzdGluZyBwdXJwb3NlcyFcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbiovXG5cbmNvbnN0IGFuYWx5c2VyID0gcmVxdWlyZSgnLi9hc3NlcnRpb24tYW5hbHlzZXInKTtcbmNvbnN0IEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcjtcblxuY29uc3QgTW9jaGEgPSByZXF1aXJlKCdtb2NoYScpLFxuICAgIGZzID0gcmVxdWlyZSgnZnMnKSxcbiAgICBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuICAgIHJlcXVpcmUoXCJAYmFiZWwvcmVnaXN0ZXJcIik7XG5cbmNvbnN0IG1vY2hhID0gbmV3IE1vY2hhKHsgdGltZW91dDogNTAwMCB9KTtcbmNvbnN0IHRlc3REaXIgPSAnLi90ZXN0cydcblxuXG4vLyBBZGQgZWFjaCAuanMgZmlsZSB0byB0aGUgbW9jaGEgaW5zdGFuY2VcbmZzLnJlYWRkaXJTeW5jKHRlc3REaXIpLmZpbHRlcihmdW5jdGlvbihmaWxlKXtcbiAgICAvLyBPbmx5IGtlZXAgdGhlIC5qcyBmaWxlc1xuICAgIHJldHVybiBmaWxlLnN1YnN0cigtMykgPT09ICcuanMnO1xuXG59KS5mb3JFYWNoKGZ1bmN0aW9uKGZpbGUpe1xuICAgIG1vY2hhLmFkZEZpbGUoXG4gICAgICAgIHBhdGguam9pbih0ZXN0RGlyLCBmaWxlKVxuICAgICk7XG59KTtcblxubGV0IGVtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5lbWl0dGVyLnJ1biA9IGZ1bmN0aW9uKCkge1xuXG4gIGxldCB0ZXN0cyA9IFtdO1xuICBsZXQgY29udGV4dCA9IFwiXCI7XG4gIGxldCBzZXBhcmF0b3IgPSAnIC0+ICc7XG4gIC8vIFJ1biB0aGUgdGVzdHMuXG4gIHRyeSB7XG4gIGxldCBydW5uZXIgPSBtb2NoYS51aSgndGRkJykucnVuKClcbiAgICAub24oJ3Rlc3QgZW5kJywgZnVuY3Rpb24odGVzdCkge1xuICAgICAgICAvLyByZW1vdmUgY29tbWVudHNcbiAgICAgICAgbGV0IGJvZHkgPSB0ZXN0LmJvZHkucmVwbGFjZSgvXFwvXFwvLipcXG58XFwvXFwqLipcXCpcXC8vZywgJycpO1xuICAgICAgICAvLyBjb2xsYXBzZSBzcGFjZXNcbiAgICAgICAgYm9keSA9IGJvZHkucmVwbGFjZSgvXFxzKy9nLCcgJyk7XG4gICAgICAgIGxldCBvYmogPSB7XG4gICAgICAgICAgdGl0bGU6IHRlc3QudGl0bGUsXG4gICAgICAgICAgY29udGV4dDogY29udGV4dC5zbGljZSgwLCAtc2VwYXJhdG9yLmxlbmd0aCksXG4gICAgICAgICAgc3RhdGU6IHRlc3Quc3RhdGUsXG4gICAgICAgICAgLy8gYm9keTogYm9keSxcbiAgICAgICAgICBhc3NlcnRpb25zOiBhbmFseXNlcihib2R5KVxuICAgICAgICB9O1xuICAgICAgICB0ZXN0cy5wdXNoKG9iaik7XG4gICAgfSlcbiAgICAub24oJ2VuZCcsIGZ1bmN0aW9uKCkge1xuICAgICAgICBlbWl0dGVyLnJlcG9ydCA9IHRlc3RzO1xuICAgICAgICBlbWl0dGVyLmVtaXQoJ2RvbmUnLCB0ZXN0cylcbiAgICB9KVxuICAgIC5vbignc3VpdGUnLCBmdW5jdGlvbihzKSB7XG4gICAgICBjb250ZXh0ICs9IChzLnRpdGxlICsgc2VwYXJhdG9yKTtcblxuICAgIH0pXG4gICAgLm9uKCdzdWl0ZSBlbmQnLCBmdW5jdGlvbihzKSB7XG4gICAgICBjb250ZXh0ID0gY29udGV4dC5zbGljZSgwLCAtKHMudGl0bGUubGVuZ3RoICsgc2VwYXJhdG9yLmxlbmd0aCkpXG4gICAgfSlcbiAgfSBjYXRjaChlKSB7XG4gICAgdGhyb3coZSk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1pdHRlcjtcblxuLypcbiAqIE1vY2hhLnJ1bm5lciBFdmVudHM6XG4gKiBjYW4gYmUgdXNlZCB0byBidWlsZCBhIGJldHRlciBjdXN0b20gcmVwb3J0XG4gKlxuICogICAtIGBzdGFydGAgIGV4ZWN1dGlvbiBzdGFydGVkXG4gKiAgIC0gYGVuZGAgIGV4ZWN1dGlvbiBjb21wbGV0ZVxuICogICAtIGBzdWl0ZWAgIChzdWl0ZSkgdGVzdCBzdWl0ZSBleGVjdXRpb24gc3RhcnRlZFxuICogICAtIGBzdWl0ZSBlbmRgICAoc3VpdGUpIGFsbCB0ZXN0cyAoYW5kIHN1Yi1zdWl0ZXMpIGhhdmUgZmluaXNoZWRcbiAqICAgLSBgdGVzdGAgICh0ZXN0KSB0ZXN0IGV4ZWN1dGlvbiBzdGFydGVkXG4gKiAgIC0gYHRlc3QgZW5kYCAgKHRlc3QpIHRlc3QgY29tcGxldGVkXG4gKiAgIC0gYGhvb2tgICAoaG9vaykgaG9vayBleGVjdXRpb24gc3RhcnRlZFxuICogICAtIGBob29rIGVuZGAgIChob29rKSBob29rIGNvbXBsZXRlXG4gKiAgIC0gYHBhc3NgICAodGVzdCkgdGVzdCBwYXNzZWRcbiAqICAgLSBgZmFpbGAgICh0ZXN0LCBlcnIpIHRlc3QgZmFpbGVkXG4gKiAgIC0gYHBlbmRpbmdgICAodGVzdCkgdGVzdCBwZW5kaW5nXG4gKi8iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "test-runner.js"
      ],
      "names": [
        "analyser",
        "require",
        "EventEmitter",
        "Mocha",
        "fs",
        "path",
        "mocha",
        "timeout",
        "testDir",
        "readdirSync",
        "filter",
        "file",
        "substr",
        "forEach",
        "addFile",
        "join",
        "emitter",
        "run",
        "tests",
        "context",
        "separator",
        "runner",
        "ui",
        "on",
        "test",
        "body",
        "replace",
        "obj",
        "title",
        "slice",
        "length",
        "state",
        "assertions",
        "push",
        "report",
        "emit",
        "s",
        "e",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,YAAvC;;AAEA,MAAMC,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;AAAA,MACIG,EAAE,GAAGH,OAAO,CAAC,IAAD,CADhB;AAAA,MAEII,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAFlB;;AAGIA,OAAO,CAAC,iBAAD,CAAP;;AAEJ,MAAMK,KAAK,GAAG,IAAIH,KAAJ,CAAU;AAAEI,EAAAA,OAAO,EAAE;AAAX,CAAV,CAAd;AACA,MAAMC,OAAO,GAAG,SAAhB,C,CAGA;;AACAJ,EAAE,CAACK,WAAH,CAAeD,OAAf,EAAwBE,MAAxB,CAA+B,UAASC,IAAT,EAAc;AACzC;AACA,SAAOA,IAAI,CAACC,MAAL,CAAY,CAAC,CAAb,MAAoB,KAA3B;AAEH,CAJD,EAIGC,OAJH,CAIW,UAASF,IAAT,EAAc;AACrBL,EAAAA,KAAK,CAACQ,OAAN,CACIT,IAAI,CAACU,IAAL,CAAUP,OAAV,EAAmBG,IAAnB,CADJ;AAGH,CARD;AAUA,IAAIK,OAAO,GAAG,IAAId,YAAJ,EAAd;;AACAc,OAAO,CAACC,GAAR,GAAc,YAAW;AAEvB,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,SAAS,GAAG,MAAhB,CAJuB,CAKvB;;AACA,MAAI;AACJ,QAAIC,MAAM,GAAGf,KAAK,CAACgB,EAAN,CAAS,KAAT,EAAgBL,GAAhB,GACVM,EADU,CACP,UADO,EACK,UAASC,IAAT,EAAe;AAC3B;AACA,UAAIC,IAAI,GAAGD,IAAI,CAACC,IAAL,CAAUC,OAAV,CAAkB,sBAAlB,EAA0C,EAA1C,CAAX,CAF2B,CAG3B;;AACAD,MAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAoB,GAApB,CAAP;AACA,UAAIC,GAAG,GAAG;AACRC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KADJ;AAERT,QAAAA,OAAO,EAAEA,OAAO,CAACU,KAAR,CAAc,CAAd,EAAiB,CAACT,SAAS,CAACU,MAA5B,CAFD;AAGRC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAHJ;AAIR;AACAC,QAAAA,UAAU,EAAEhC,QAAQ,CAACyB,IAAD;AALZ,OAAV;AAOAP,MAAAA,KAAK,CAACe,IAAN,CAAWN,GAAX;AACH,KAdU,EAeVJ,EAfU,CAeP,KAfO,EAeA,YAAW;AAClBP,MAAAA,OAAO,CAACkB,MAAR,GAAiBhB,KAAjB;AACAF,MAAAA,OAAO,CAACmB,IAAR,CAAa,MAAb,EAAqBjB,KAArB;AACH,KAlBU,EAmBVK,EAnBU,CAmBP,OAnBO,EAmBE,UAASa,CAAT,EAAY;AACvBjB,MAAAA,OAAO,IAAKiB,CAAC,CAACR,KAAF,GAAUR,SAAtB;AAED,KAtBU,EAuBVG,EAvBU,CAuBP,WAvBO,EAuBM,UAASa,CAAT,EAAY;AAC3BjB,MAAAA,OAAO,GAAGA,OAAO,CAACU,KAAR,CAAc,CAAd,EAAiB,EAAEO,CAAC,CAACR,KAAF,CAAQE,MAAR,GAAiBV,SAAS,CAACU,MAA7B,CAAjB,CAAV;AACD,KAzBU,CAAb;AA0BC,GA3BD,CA2BE,OAAMO,CAAN,EAAS;AACT,UAAMA,CAAN;AACD;AACF,CApCD;;AAsCAC,MAAM,CAACC,OAAP,GAAiBvB,OAAjB;AAEA",
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nconst analyser = require('./assertion-analyser');\nconst EventEmitter = require('events').EventEmitter;\n\nconst Mocha = require('mocha'),\n    fs = require('fs'),\n    path = require('path');\n    require(\"@babel/register\");\n\nconst mocha = new Mocha({ timeout: 5000 });\nconst testDir = './tests'\n\n\n// Add each .js file to the mocha instance\nfs.readdirSync(testDir).filter(function(file){\n    // Only keep the .js files\n    return file.substr(-3) === '.js';\n\n}).forEach(function(file){\n    mocha.addFile(\n        path.join(testDir, file)\n    );\n});\n\nlet emitter = new EventEmitter();\nemitter.run = function() {\n\n  let tests = [];\n  let context = \"\";\n  let separator = ' -> ';\n  // Run the tests.\n  try {\n  let runner = mocha.ui('tdd').run()\n    .on('test end', function(test) {\n        // remove comments\n        let body = test.body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n        // collapse spaces\n        body = body.replace(/\\s+/g,' ');\n        let obj = {\n          title: test.title,\n          context: context.slice(0, -separator.length),\n          state: test.state,\n          // body: body,\n          assertions: analyser(body)\n        };\n        tests.push(obj);\n    })\n    .on('end', function() {\n        emitter.report = tests;\n        emitter.emit('done', tests)\n    })\n    .on('suite', function(s) {\n      context += (s.title + separator);\n\n    })\n    .on('suite end', function(s) {\n      context = context.slice(0, -(s.title.length + separator.length))\n    })\n  } catch(e) {\n    throw(e);\n  }\n};\n\nmodule.exports = emitter;\n\n/*\n * Mocha.runner Events:\n * can be used to build a better custom report\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n */"
      ]
    },
    "sourceType": "module",
    "mtime": 1745680807048
  },
  "{\"sourceRoot\":\"/workspace/boilerplate-project-sudoku-solver/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/workspace/boilerplate-project-sudoku-solver\",\"filename\":\"/workspace/boilerplate-project-sudoku-solver/assertion-analyser.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/workspace/boilerplate-project-sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/workspace/boilerplate-project-sudoku-solver",
      "filename": "/workspace/boilerplate-project-sudoku-solver/assertion-analyser.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/workspace/boilerplate-project-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/workspace/boilerplate-project-sudoku-solver/assertion-analyser.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/workspace/boilerplate-project-sudoku-solver/assertion-analyser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/",
        "sourceFileName": "assertion-analyser.js"
      }
    },
    "ast": null,
    "code": "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\nfunction objParser(str, init) {\n  // finds objects, arrays, strings, and function arguments\n  // between parens, because they may contain ','\n  let openSym = ['[', '{', '\"', \"'\", '('];\n  let closeSym = [']', '}', '\"', \"'\", ')'];\n  let type;\n  let i;\n\n  for (i = init || 0; i < str.length; i++) {\n    type = openSym.indexOf(str[i]);\n    if (type !== -1) break;\n  }\n\n  if (type === -1) return null;\n  let open = openSym[type];\n  let close = closeSym[type];\n  let count = 1;\n  let k;\n\n  for (k = i + 1; k < str.length; k++) {\n    if (open === '\"' || open === \"'\") {\n      if (str[k] === close) count--;\n      if (str[k] === '\\\\') k++;\n    } else {\n      if (str[k] === open) count++;\n      if (str[k] === close) count--;\n    }\n\n    if (count === 0) break;\n  }\n\n  if (count !== 0) return null;\n  let obj = str.slice(i, k + 1);\n  return {\n    start: i,\n    end: k,\n    obj: obj\n  };\n}\n\nfunction replacer(str) {\n  // replace objects with a symbol ( __#n)\n  let obj;\n  let cnt = 0;\n  let data = [];\n\n  while (obj = objParser(str)) {\n    data[cnt] = obj.obj;\n    str = str.substring(0, obj.start) + '__#' + cnt++ + str.substring(obj.end + 1);\n  }\n\n  return {\n    str: str,\n    dictionary: data\n  };\n}\n\nfunction splitter(str) {\n  // split on commas, then restore the objects\n  let strObj = replacer(str);\n  let args = strObj.str.split(',');\n  args = args.map(function (a) {\n    let m = a.match(/__#(\\d+)/);\n\n    while (m) {\n      a = a.replace(/__#(\\d+)/, strObj.dictionary[m[1]]);\n      m = a.match(/__#(\\d+)/);\n    }\n\n    return a.trim();\n  });\n  return args;\n}\n\nfunction assertionAnalyser(body) {\n  // already filtered in the test runner\n  // // remove comments\n  // body = body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n  // // get test function body\n  // body = body.match(/\\{\\s*([\\s\\S]*)\\}\\s*$/)[1];\n  if (!body) return \"invalid assertion\"; // replace assertions bodies, so that they cannot\n  // contain the word 'assertion'\n\n  let cleanedBody = body.match(/(?:browser\\s*\\.\\s*)?assert\\s*\\.\\s*\\w*\\([\\s\\S]*\\)/);\n\n  if (cleanedBody && Array.isArray(cleanedBody)) {\n    body = cleanedBody[0];\n  } else {\n    // No assertions present\n    return [];\n  }\n\n  let s = replacer(body); // split on 'assertion'\n\n  let splittedAssertions = s.str.split('assert');\n  let assertions = splittedAssertions.slice(1); // match the METHODS\n\n  let assertionBodies = [];\n  let methods = assertions.map(function (a, i) {\n    let m = a.match(/^\\s*\\.\\s*(\\w+)__#(\\d+)/);\n    assertionBodies.push(parseInt(m[2]));\n    let pre = splittedAssertions[i].match(/browser\\s*\\.\\s*/) ? 'browser.' : '';\n    return pre + m[1];\n  });\n  if (methods.some(function (m) {\n    return !m;\n  })) return \"invalid assertion\"; // remove parens from the assertions bodies\n\n  let bodies = assertionBodies.map(function (b) {\n    return s.dictionary[b].slice(1, -1).trim();\n  });\n  assertions = methods.map(function (m, i) {\n    return {\n      method: m,\n      args: splitter(bodies[i]) //replace objects, split on ',' ,then restore objects\n\n    };\n  });\n  return assertions;\n}\n\nmodule.exports = assertionAnalyser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "assertion-analyser.js"
      ],
      "names": [
        "objParser",
        "str",
        "init",
        "openSym",
        "closeSym",
        "type",
        "i",
        "length",
        "indexOf",
        "open",
        "close",
        "count",
        "k",
        "obj",
        "slice",
        "start",
        "end",
        "replacer",
        "cnt",
        "data",
        "substring",
        "dictionary",
        "splitter",
        "strObj",
        "args",
        "split",
        "map",
        "a",
        "m",
        "match",
        "replace",
        "trim",
        "assertionAnalyser",
        "body",
        "cleanedBody",
        "Array",
        "isArray",
        "s",
        "splittedAssertions",
        "assertions",
        "assertionBodies",
        "methods",
        "push",
        "parseInt",
        "pre",
        "some",
        "bodies",
        "b",
        "method",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nfunction objParser(str, init) {\n  // finds objects, arrays, strings, and function arguments\n  // between parens, because they may contain ','\n  let openSym = ['[', '{', '\"', \"'\", '('];\n  let closeSym = [']', '}', '\"', \"'\", ')'];\n  let type;\n  let i;\n  for(i = (init || 0); i < str.length; i++ ) {\n    type = openSym.indexOf(str[i]);\n    if( type !== -1)  break;\n  }\n  if (type === -1) return null;\n  let open = openSym[type];\n  let close = closeSym[type];\n  let count = 1;\n  let k;\n  for(k = i+1; k < str.length; k++) {\n    if(open === '\"' || open === \"'\") {\n      if(str[k] === close) count--;\n      if(str[k] === '\\\\') k++;\n    } else {\n      if(str[k] === open) count++;\n      if(str[k] === close) count--;\n    }\n    if(count === 0) break;\n  }\n  if(count !== 0) return null;\n  let obj = str.slice(i, k+1);\n  return {\n    start : i,\n    end: k,\n    obj: obj\n  };\n}\n\nfunction replacer(str) {\n  // replace objects with a symbol ( __#n)\n  let obj;\n  let cnt = 0;\n  let data = [];\n  while(obj = objParser(str)) {\n    data[cnt] = obj.obj;\n    str = str.substring(0, obj.start) + '__#' + cnt++ + str.substring(obj.end+1)\n  }\n  return {\n    str : str,\n    dictionary : data\n  }\n}\n\nfunction splitter(str) {\n  // split on commas, then restore the objects\n  let strObj = replacer(str);\n  let args = strObj.str.split(',');\n  args = args.map(function(a){\n    let m = a.match(/__#(\\d+)/);\n    while (m) {\n      a = a.replace(/__#(\\d+)/, strObj.dictionary[m[1]]);\n      m = a.match(/__#(\\d+)/);\n    }\n    return a.trim();\n  })\n  return args;\n}\n\nfunction assertionAnalyser(body) {\n  \n  // already filtered in the test runner\n  // // remove comments\n  // body = body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n  // // get test function body\n  // body = body.match(/\\{\\s*([\\s\\S]*)\\}\\s*$/)[1];\n  \n  if(!body) return \"invalid assertion\";\n  // replace assertions bodies, so that they cannot\n  // contain the word 'assertion'\n\n  let cleanedBody = body.match(/(?:browser\\s*\\.\\s*)?assert\\s*\\.\\s*\\w*\\([\\s\\S]*\\)/)\n  if(cleanedBody && Array.isArray(cleanedBody)) {\n    body = cleanedBody[0];\n  } else {\n    // No assertions present\n    return [];\n  }\n  let s = replacer(body);\n  // split on 'assertion'\n  let splittedAssertions = s.str.split('assert');\n  let assertions = splittedAssertions.slice(1);\n  // match the METHODS\n\n  let assertionBodies = [];\n  let methods = assertions.map(function(a, i){\n    let m = a.match(/^\\s*\\.\\s*(\\w+)__#(\\d+)/);\n    assertionBodies.push(parseInt(m[2]));\n    let pre = splittedAssertions[i].match(/browser\\s*\\.\\s*/) ? 'browser.' : '';\n    return pre + m[1];\n  });\n  if(methods.some(function(m){ return !m })) return \"invalid assertion\";\n  // remove parens from the assertions bodies\n  let bodies = assertionBodies.map(function(b){\n    return s.dictionary[b].slice(1,-1).trim();\n  });\n  assertions = methods.map(function(m, i) {\n    return {\n      method: m,\n      args: splitter(bodies[i]) //replace objects, split on ',' ,then restore objects\n    }\n  })\n  return assertions;\n}\n\nmodule.exports = assertionAnalyser;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1745680807096
  },
  "{\"sourceRoot\":\"/workspace/boilerplate-project-sudoku-solver/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/workspace/boilerplate-project-sudoku-solver\",\"filename\":\"/workspace/boilerplate-project-sudoku-solver/routes/api.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/workspace/boilerplate-project-sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/workspace/boilerplate-project-sudoku-solver",
      "filename": "/workspace/boilerplate-project-sudoku-solver/routes/api.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/workspace/boilerplate-project-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/workspace/boilerplate-project-sudoku-solver/routes/api.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/workspace/boilerplate-project-sudoku-solver/routes/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/routes/",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nconst SudokuSolver = require('../controllers/sudoku-solver.js');\n\nmodule.exports = function (app) {\n  let solver = new SudokuSolver();\n  app.route('/api/check').post((req, res) => {\n    const puzzle = req.body.puzzle;\n    const coordinate = req.body.coordinate;\n    const value = req.body.value;\n\n    if (puzzle == \"\" || puzzle == null || coordinate == \"\" || coordinate == null || value == \"\" || value == null) {\n      return res.json({\n        error: 'Required field(s) missing'\n      });\n    }\n\n    let validation = solver.validate(puzzle);\n\n    if (validation === \"Invalid characters in puzzle\") {\n      return res.json({\n        error: 'Invalid characters in puzzle'\n      });\n    } else if (validation === \"Expected puzzle to be 81 characters long\") {\n      return res.json({\n        error: 'Expected puzzle to be 81 characters long'\n      });\n    } // check that coord is A1 - I9 \n\n\n    const validCoords = /^[A-I][1-9]$/;\n\n    if (!validCoords.test(coordinate)) {\n      return res.json({\n        error: 'Invalid coordinate'\n      });\n    } // check that vaue = 1-9 \n\n\n    const validVal = /^[1-9]$/;\n\n    if (!validVal.test(value)) {\n      return res.json({\n        error: 'Invalid value'\n      });\n    } // validation done\n\n\n    const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"];\n    const row = letters.indexOf(coordinate.split(\"\")[0]) + 1;\n    const col = coordinate.split(\"\")[1];\n    let checkRow = solver.checkRowPlacement(puzzle, row, col, value);\n    let checkCol = solver.checkColPlacement(puzzle, row, col, value);\n    let checkRegion = solver.checkRegionPlacement(puzzle, row, col, value);\n\n    if (checkRow && checkCol && checkRegion) {\n      return res.json({\n        valid: true\n      });\n    } else if (!checkRow && !checkCol && !checkRegion) {\n      return res.json({\n        valid: false,\n        conflict: [\"row\", \"column\", \"region\"]\n      });\n    } else if (!checkRow && !checkCol && checkRegion) {\n      return res.json({\n        valid: false,\n        conflict: [\"row\", \"column\"]\n      });\n    } else if (!checkRow && checkCol && !checkRegion) {\n      return res.json({\n        valid: false,\n        conflict: [\"row\", \"region\"]\n      });\n    } else if (checkRow && !checkCol && !checkRegion) {\n      return res.json({\n        valid: false,\n        conflict: [\"column\", \"region\"]\n      });\n    } else if (!checkRow && checkCol && checkRegion) {\n      return res.json({\n        valid: false,\n        conflict: [\"row\"]\n      });\n    } else if (checkRow && !checkCol && checkRegion) {\n      return res.json({\n        valid: false,\n        conflict: [\"column\"]\n      });\n    }\n  });\n  app.route('/api/solve').post((req, res) => {\n    const puzzle = req.body.puzzle;\n    let validation = solver.validate(puzzle);\n\n    if (validation === \"Required field missing\") {\n      return res.json({\n        error: 'Required field missing'\n      });\n    } else if (validation === \"Invalid characters in puzzle\") {\n      return res.json({\n        error: 'Invalid characters in puzzle'\n      });\n    } else if (validation === \"Expected puzzle to be 81 characters long\") {\n      return res.json({\n        error: 'Expected puzzle to be 81 characters long'\n      });\n    }\n\n    let solution = solver.solve(puzzle); // this check is not entirely correct. \"puzzle\": \".99..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..\" passes this check, but is wrong\n\n    if (solver.getNextEmptyCell(solution) == -1) {\n      return res.json({\n        solution: solution\n      });\n    } else {\n      return res.json({\n        error: 'Puzzle cannot be solved'\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "SudokuSolver",
        "require",
        "module",
        "exports",
        "app",
        "solver",
        "route",
        "post",
        "req",
        "res",
        "puzzle",
        "body",
        "coordinate",
        "value",
        "json",
        "error",
        "validation",
        "validate",
        "validCoords",
        "test",
        "validVal",
        "letters",
        "row",
        "indexOf",
        "split",
        "col",
        "checkRow",
        "checkRowPlacement",
        "checkCol",
        "checkColPlacement",
        "checkRegion",
        "checkRegionPlacement",
        "valid",
        "conflict",
        "solution",
        "solve",
        "getNextEmptyCell"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,iCAAD,CAA5B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAe;AAE9B,MAAIC,MAAM,GAAG,IAAIL,YAAJ,EAAb;AAEAI,EAAAA,GAAG,CAACE,KAAJ,CAAU,YAAV,EACGC,IADH,CACQ,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClB,UAAMC,MAAM,GAAGF,GAAG,CAACG,IAAJ,CAASD,MAAxB;AACA,UAAME,UAAU,GAAGJ,GAAG,CAACG,IAAJ,CAASC,UAA5B;AACA,UAAMC,KAAK,GAAGL,GAAG,CAACG,IAAJ,CAASE,KAAvB;;AAEA,QAAIH,MAAM,IAAI,EAAV,IAAiBA,MAAM,IAAI,IAA3B,IAAmCE,UAAU,IAAI,EAAjD,IAAwDA,UAAU,IAAI,IAAtE,IAA8EC,KAAK,IAAI,EAAvF,IAA8FA,KAAK,IAAI,IAA3G,EAAiH;AAC/G,aAAOJ,GAAG,CAACK,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT,CAAP;AACD;;AAED,QAAIC,UAAU,GAAGX,MAAM,CAACY,QAAP,CAAgBP,MAAhB,CAAjB;;AAEA,QAAIM,UAAU,KAAK,8BAAnB,EAAmD;AACjD,aAAOP,GAAG,CAACK,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT,CAAP;AACD,KAFD,MAEO,IAAIC,UAAU,KAAK,0CAAnB,EAA+D;AACpE,aAAOP,GAAG,CAACK,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT,CAAP;AACD,KAfiB,CAiBlB;;;AAEA,UAAMG,WAAW,GAAG,cAApB;;AAEA,QAAI,CAACA,WAAW,CAACC,IAAZ,CAAiBP,UAAjB,CAAL,EAAkC;AAChC,aAAOH,GAAG,CAACK,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT,CAAP;AACD,KAvBiB,CAyBlB;;;AAEA,UAAMK,QAAQ,GAAG,SAAjB;;AAEA,QAAI,CAACA,QAAQ,CAACD,IAAT,CAAcN,KAAd,CAAL,EAA0B;AACxB,aAAOJ,GAAG,CAACK,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT,CAAP;AACD,KA/BiB,CAkClB;;;AACA,UAAMM,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,CAAhB;AACA,UAAMC,GAAG,GAAGD,OAAO,CAACE,OAAR,CAAgBX,UAAU,CAACY,KAAX,CAAiB,EAAjB,EAAqB,CAArB,CAAhB,IAA2C,CAAvD;AACA,UAAMC,GAAG,GAAGb,UAAU,CAACY,KAAX,CAAiB,EAAjB,EAAqB,CAArB,CAAZ;AAEA,QAAIE,QAAQ,GAAGrB,MAAM,CAACsB,iBAAP,CAAyBjB,MAAzB,EAAiCY,GAAjC,EAAsCG,GAAtC,EAA2CZ,KAA3C,CAAf;AACA,QAAIe,QAAQ,GAAGvB,MAAM,CAACwB,iBAAP,CAAyBnB,MAAzB,EAAiCY,GAAjC,EAAsCG,GAAtC,EAA2CZ,KAA3C,CAAf;AACA,QAAIiB,WAAW,GAAGzB,MAAM,CAAC0B,oBAAP,CAA4BrB,MAA5B,EAAoCY,GAApC,EAAyCG,GAAzC,EAA8CZ,KAA9C,CAAlB;;AAEA,QAAIa,QAAQ,IAAIE,QAAZ,IAAwBE,WAA5B,EAAyC;AACrC,aAAOrB,GAAG,CAACK,IAAJ,CAAS;AAAEkB,QAAAA,KAAK,EAAE;AAAT,OAAT,CAAP;AACH,KAFD,MAEO,IAAI,CAACN,QAAD,IAAa,CAACE,QAAd,IAA0B,CAACE,WAA/B,EAA4C;AACjD,aAAOrB,GAAG,CAACK,IAAJ,CAAU;AAACkB,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,QAAQ,EAAE,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB;AAAzB,OAAV,CAAP;AACD,KAFM,MAEA,IAAI,CAACP,QAAD,IAAa,CAACE,QAAd,IAA0BE,WAA9B,EAA2C;AAChD,aAAOrB,GAAG,CAACK,IAAJ,CAAU;AAACkB,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,QAAQ,EAAE,CAAC,KAAD,EAAQ,QAAR;AAAzB,OAAV,CAAP;AACD,KAFM,MAEA,IAAI,CAACP,QAAD,IAAaE,QAAb,IAAyB,CAACE,WAA9B,EAA2C;AAChD,aAAOrB,GAAG,CAACK,IAAJ,CAAU;AAACkB,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,QAAQ,EAAE,CAAC,KAAD,EAAQ,QAAR;AAAzB,OAAV,CAAP;AACD,KAFM,MAEA,IAAIP,QAAQ,IAAI,CAACE,QAAb,IAAyB,CAACE,WAA9B,EAA2C;AAChD,aAAOrB,GAAG,CAACK,IAAJ,CAAU;AAACkB,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,QAAQ,EAAE,CAAC,QAAD,EAAW,QAAX;AAAzB,OAAV,CAAP;AACD,KAFM,MAEA,IAAI,CAACP,QAAD,IAAaE,QAAb,IAAyBE,WAA7B,EAA0C;AAC/C,aAAOrB,GAAG,CAACK,IAAJ,CAAU;AAACkB,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,QAAQ,EAAE,CAAC,KAAD;AAAzB,OAAV,CAAP;AACD,KAFM,MAEA,IAAIP,QAAQ,IAAI,CAACE,QAAb,IAAyBE,WAA7B,EAA0C;AAC/C,aAAOrB,GAAG,CAACK,IAAJ,CAAU;AAACkB,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,QAAQ,EAAE,CAAC,QAAD;AAAzB,OAAV,CAAP;AACD;AAGF,GA7DH;AA+DA7B,EAAAA,GAAG,CAACE,KAAJ,CAAU,YAAV,EACGC,IADH,CACQ,CAACC,GAAD,EAAMC,GAAN,KAAc;AAElB,UAAMC,MAAM,GAAGF,GAAG,CAACG,IAAJ,CAASD,MAAxB;AACA,QAAIM,UAAU,GAAGX,MAAM,CAACY,QAAP,CAAgBP,MAAhB,CAAjB;;AAEA,QAAIM,UAAU,KAAK,wBAAnB,EAA6C;AAC3C,aAAOP,GAAG,CAACK,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT,CAAP;AACD,KAFD,MAEO,IAAIC,UAAU,KAAK,8BAAnB,EAAmD;AACxD,aAAOP,GAAG,CAACK,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT,CAAP;AACD,KAFM,MAEA,IAAIC,UAAU,KAAK,0CAAnB,EAA+D;AACpE,aAAOP,GAAG,CAACK,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT,CAAP;AACD;;AAED,QAAImB,QAAQ,GAAG7B,MAAM,CAAC8B,KAAP,CAAazB,MAAb,CAAf,CAbkB,CAelB;;AACA,QAAIL,MAAM,CAAC+B,gBAAP,CAAwBF,QAAxB,KAAqC,CAAC,CAA1C,EAA6C;AACzC,aAAOzB,GAAG,CAACK,IAAJ,CAAS;AAACoB,QAAAA,QAAQ,EAAEA;AAAX,OAAT,CAAP;AACH,KAFD,MAEO;AACL,aAAOzB,GAAG,CAACK,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT,CAAP;AACD;AAEF,GAvBH;AAwBD,CA3FD",
      "sourceRoot": "/workspace/boilerplate-project-sudoku-solver/routes/",
      "sourcesContent": [
        "'use strict';\n\nconst SudokuSolver = require('../controllers/sudoku-solver.js');\n\nmodule.exports = function (app) {\n  \n  let solver = new SudokuSolver();\n\n  app.route('/api/check')\n    .post((req, res) => {\n      const puzzle = req.body.puzzle;\n      const coordinate = req.body.coordinate;\n      const value = req.body.value;\n\n      if (puzzle == \"\"  || puzzle == null || coordinate == \"\"  || coordinate == null || value == \"\"  || value == null) {\n        return res.json({ error: 'Required field(s) missing' })\n      }\n\n      let validation = solver.validate(puzzle);\n\n      if (validation === \"Invalid characters in puzzle\") {\n        return res.json({ error: 'Invalid characters in puzzle' })\n      } else if (validation === \"Expected puzzle to be 81 characters long\") {\n        return res.json({ error: 'Expected puzzle to be 81 characters long' })\n      }\n\n      // check that coord is A1 - I9 \n\n      const validCoords = /^[A-I][1-9]$/;\n\n      if (!validCoords.test(coordinate)){\n        return res.json({ error: 'Invalid coordinate'})\n      }\n\n      // check that vaue = 1-9 \n\n      const validVal = /^[1-9]$/\n\n      if (!validVal.test(value)){\n        return res.json({ error: 'Invalid value' })\n      }\n\n\n      // validation done\n      const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"]\n      const row = letters.indexOf(coordinate.split(\"\")[0]) + 1\n      const col = coordinate.split(\"\")[1]\n\n      let checkRow = solver.checkRowPlacement(puzzle, row, col, value);\n      let checkCol = solver.checkColPlacement(puzzle, row, col, value);\n      let checkRegion = solver.checkRegionPlacement(puzzle, row, col, value);\n\n      if (checkRow && checkCol && checkRegion) {\n          return res.json({ valid: true })\n      } else if (!checkRow && !checkCol && !checkRegion) {\n        return res.json( {valid: false, conflict: [\"row\", \"column\", \"region\"] })\n      } else if (!checkRow && !checkCol && checkRegion) {\n        return res.json( {valid: false, conflict: [\"row\", \"column\"] })\n      } else if (!checkRow && checkCol && !checkRegion) {\n        return res.json( {valid: false, conflict: [\"row\", \"region\"] })\n      } else if (checkRow && !checkCol && !checkRegion) {\n        return res.json( {valid: false, conflict: [\"column\", \"region\"] })\n      } else if (!checkRow && checkCol && checkRegion) {\n        return res.json( {valid: false, conflict: [\"row\"] })\n      } else if (checkRow && !checkCol && checkRegion) {\n        return res.json( {valid: false, conflict: [\"column\"] })\n      } \n\n\n    });\n    \n  app.route('/api/solve')\n    .post((req, res) => {\n\n      const puzzle = req.body.puzzle;\n      let validation = solver.validate(puzzle);\n\n      if (validation === \"Required field missing\") {\n        return res.json({ error: 'Required field missing' })\n      } else if (validation === \"Invalid characters in puzzle\") {\n        return res.json({ error: 'Invalid characters in puzzle' })\n      } else if (validation === \"Expected puzzle to be 81 characters long\") {\n        return res.json({ error: 'Expected puzzle to be 81 characters long' })\n      }\n\n      let solution = solver.solve(puzzle)\n\n      // this check is not entirely correct. \"puzzle\": \".99..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..\" passes this check, but is wrong\n      if (solver.getNextEmptyCell(solution) == -1) {\n          return res.json({solution: solution})\n      } else {\n        return res.json({ error: 'Puzzle cannot be solved' })\n      }\n\n    });\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1745680808304
  }
}